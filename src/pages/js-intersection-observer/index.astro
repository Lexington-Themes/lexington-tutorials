---
import BaseLayout from "@/layouts/BaseLayout.astro";
import Wrapper from "@/components/fundations/containers/Wrapper.astro";
import TutorialBanner from "@/components/global/TutorialBanner.astro";
import {
  generateArticleSchema,
  generateBreadcrumbSchema,
  generateHowToSchema,
} from "@/utils/jsonLd";

// SEO Configuration
const seoConfig = {
  title: "Create Js Intersection Observer with JavaScript",
  description: "Learn to build js intersection observer components using JavaScript and Tailwind CSS. Includes responsive design and modern styling.",
  canonical: "/js-intersection-observer",
  jsonLd: [
    generateArticleSchema({
      title: "Create Js Intersection Observer with JavaScript",
      description: "Learn to build js intersection observer components using JavaScript and Tailwind CSS. Includes responsive design and modern styling.",
      url: "/js-intersection-observer",
      datePublished: "2025-10-01T06:22:29.078Z",
      dateModified: "2025-10-01T06:22:29.078Z",
      keywords: ["Tailwind CSS","JavaScript","Vanilla JS","Js Intersection Observer","Tutorial","Web Development"],
    }),
    generateBreadcrumbSchema([
      { name: "Home", url: "/" },
      { name: "Create Js Intersection Observer with JavaScript", url: "/js-intersection-observer" },
    ]),
    generateHowToSchema({
      name: "Create Js Intersection Observer with JavaScript",
      description: "Learn to build js intersection observer components using JavaScript and Tailwind CSS. Includes responsive design and modern styling.",
      totalTime: "PT20M",
      steps: [
            {
                  "name": "Set up HTML structure",
                  "text": "Create the base js intersection observer container and elements"
            },
            {
                  "name": "Add JavaScript interactivity",
                  "text": "Initialize JavaScript to handle component state and interactions"
            },
            {
                  "name": "Style with Tailwind CSS",
                  "text": "Apply utility classes for responsive layout and modern design"
            },
            {
                  "name": "Add accessibility features",
                  "text": "Implement ARIA attributes and keyboard navigation"
            },
            {
                  "name": "Test the component",
                  "text": "Verify functionality across different browsers and devices"
            }
      ],
    }),
  ],
};
---

<BaseLayout seo={seoConfig}>
  <div>
    <!-- Starts links to tutorial -->
    <TutorialBanner
      tutorialUrl="https://lexingtonthemes.com/tutorials/how-to-animate-objects-with-tailwind-css-and-javascript-intersection-observer-api/"
      codeUrl="https://github.com/Lexington-Themes/lexington-tutorials/blob/main/src/pages/js-intersection-observer/index.astro"
    />
    <!-- Ends links to tutorial -->
    <!-- Introductory section with a title -->
    <section>
  <h1 class="sr-only">Create Js Intersection Observer with JavaScript</h1>

      <Wrapper class="h-screen px-8 py-48 text-center">
        <div>Scroll down</div>
      </Wrapper>
    </section>

    <!-- Section for the first image with a rotation around the Y-axis -->
    <section class="overflow-hidden">
      <Wrapper class="flex flex-col h-screen py-24">
        <img
          id="rotateYImage"
          class="w-64 mx-auto transition-transform duration-1000 ease-in-out md:w-full rounded-3xl md:max-w-xl"
          src="https://i.pinimg.com/564x/78/d1/c0/78d1c06554aead1dc1d1490f08d39ffd.jpg"
        />
      </Wrapper>
    </section>

    <!-- Section for the second image with a rotation around the X-axis -->
    <section class="overflow-hidden">
      <Wrapper class="flex flex-col h-screen py-24">
        <img
          id="rotateXImage"
          class="w-64 mx-auto transition-transform duration-1000 ease-in-out md:w-full rounded-3xl md:max-w-xl"
          src="https://i.pinimg.com/564x/78/d1/c0/78d1c06554aead1dc1d1490f08d39ffd.jpg"
        />
      </Wrapper>
    </section>
  </div>

  <script type="module">
    document.addEventListener("DOMContentLoaded", function () {
      const rotateYImage = document.getElementById("rotateYImage");
      const rotateXImage = document.getElementById("rotateXImage");

      const createObserver = (element, rotateProperty, targetDegree, step) => {
        let degree = 0;
        const observer = new IntersectionObserver((entries) => {
          entries.forEach((entry) => {
            if (entry.isIntersecting) {
              const interval = setInterval(() => {
                if (degree < targetDegree) {
                  degree += step;
                  element.style.transform = `perspective(1000px) ${rotateProperty}(${degree}deg)`;
                } else {
                  clearInterval(interval);
                }
              }, 50);
            }
          });
        });
        observer.observe(element);
      };

      createObserver(rotateYImage, "rotateY", 360, 5);
      createObserver(rotateXImage, "rotateX", 30, 1);
    });
  </script>
</BaseLayout>

---
import BaseLayout from "@/layouts/BaseLayout.astro";
const tailwind = [
  {
    url: "/animated-images",
    title: "How to create animated image cards with Tailwind CSS and Astrojs",
  },
  {
    url: "/simplified-cards",
    title: "How to create a dynamic feature grid with Astrojs and Tailwind CSS",
  },
  {
    url: "/sticky-changelog",
    title:
      "How to create a sticky changelog component with Tailwind CSS and Astrojs",
  },
  {
    url: "/multicolumn-layout",
    title: "How to create a multicolumn layout with Tailwind CSS",
  },
  {
    url: "/invoice",
    title: "How to create and print an invoice with Astrojs and Tailwind CSS ",
  },
  {
    url: "/animated-blog-cards",
    title: "How to creating animated blog cards with Astrojs and Tailwind CSS ",
  },
  {
    url: "/simplified-markup",
    title:
      "How to simplify your code and avoid repeating your markup with Astrojs and Tailwind CSS",
  },
  {
    url: "/three-d-button",
    title: "How to create a 3d button with Tailwind CSS",
  },
  {
    url: "/expandable-gallery",
    title: "How to create a expandable image gallery with Tailwind CSS",
  },
  {
    url: "/swatch-clock",
    title: "How to create a swatch clock with Tailwind CSS",
  },
  {
    url: "/animated-card-background",
    title: "How to create a card with animated background with Tailwind CSS",
  },
  {
    url: "/animated-tailwind-loader",
    title: "How to create an animated loader with Tailwind CSS",
  },
  {
    url: "/animated-tailwind-envelope",
    title: "How to create an animated envelope with Tailwind CSS",
  },
  {
    url: "/animated-tailwind-profile-card",
    title: "How to create an animated profile card with Tailwind CSS",
  },
  {
    url: "/animated-tailwind-input",
    title: "How to create an animated input with Tailwind CSS",
  },
  {
    url: "/animated-tailwind-toggle",
    title: "How to create an animated toggle with Tailwind CSS",
  },
  {
    url: "/animated-background-gradient",
    title: "How to create an animated background gradient with Tailwind CSS",
  },
  {
    url: "/animated-expanding-search-bar",
    title: "How to create an animated expanding search bar with Tailwind CSS",
  },
  {
    url: "/bottom-navigation",
    title: "How to create a bottom navigation with Tailwind CSS",
  },
  {
    url: "/ribbon",
    title: "How to create a ribbon for a pricing card with Tailwind CSS",
  },
  {
    url: "/animated-avatar-widget",
    title: "How to create an animated avatar stack widget with Tailwind CSS",
  },
  {
    url: "/table",
    title: "How to create a responsive table with Tailwind CSS",
  },
  {
    url: "/multi-column-layout",
    title: "How to create a responsive multi-column layout with Tailwind CSS",
  },
  {
    url: "/calendar",
    title: "How to create a calendar layout with Tailwind CSS",
  },
  {
    url: "/sticky-footer",
    title: "How to create a sticky footer with Tailwind CSS",
  },
  {
    url: "/bento-grid",
    title: "How to create a bento grid with Tailwind CSS",
  },
  {
    url: "/flyout-menu-with-submenu",
    title: "How to create a flyout menu with submenu using only  Tailwind CSS",
  },
  {
    url: "/tailwind-modal",
    title: "How to create a JavaScript-free modal popup with only Tailwind CSS",
  },
  {
    url: "/tailwind-dissmissible-notification",
    title:
      "How to create a JavaScript-Free dismissible notification with only Tailwind CSS",
  },
  {
    url: "/tailwind-faq",
    title:
      "How to create a JavaScript-Free animated accordion faq section with only Tailwind CSS",
  },
];
const alpinejs = [
  {
    url: "/pricing-table",
    title:
      "How to create an interactive pricing table with Astro, Tailwind CSS, and Alpine JS",
  },
  {
    url: "/adaptable-navigation",
    title:
      "How to create adaptable-navigation with Astro, Tailwind CSS, and Alpine JS",
  },
  {
    url: "/alpine-sidebar",
    title: "How to create a sidebar navigation Tailwind CSS and and Alpine JS",
  },
  {
    url: "/intersection-observer",
    title:
      "How to animate objects with Tailwind CSS and Alpinejs intersection observer",
  },
  {
    url: "/alpine-modal",
    title:
      "How to create an animated log in modal  with Tailwind CSS and Alpine JS",
  },
  {
    url: "/alpine-testimonial",
    title:
      "How to create an interactive testimonial with Astrojs, Tailwind CSS and Alpine JS",
  },
  {
    url: "/flyout-menu",
    title:
      "How to create a flyout menu with Astrojs, Tailwind CSS and Alpinejs",
  },
  {
    url: "/cookie-banner",
    title:
      "How to create a dismissible cookie banner with Tailwind CSS and  Alpinejs ",
  },
  {
    url: "/tooltip",
    title: "How to create a tooltip Tailwind CSS and  Alpinejs ",
  },
  {
    url: "/change-on-scroll",
    title:
      "How to change background on scroll with Tailwind CSS and  Alpinejs ",
  },
  {
    url: "/tabs",
    title: "How to create a set of tabs with  Tailwind CSS and Alpinejs",
  },
  {
    url: "/theme-toggle",
    title: "How to create a dark mode toggle with Tailwind CSS and Alpinejs",
  },
  {
    url: "/tag-input",
    title: "How to create a tag input with Tailwind CSS and Alpinejs",
  },
  {
    url: "/auth-form",
    title: "How to create a Login/Register Form with Tailwind CSS and Alpinejs",
  },
  {
    url: "/progress-bar",
    title: "How to create a progress-bar with Tailwind CSS and Alpinejs",
  },
  {
    url: "/rating-system",
    title: "How to create a rating system with Tailwind CSS and Alpinejs",
  },
  {
    url: "/accordion",
    title: "How to create an accordion with Tailwind CSS and Alpinejs",
  },
  {
    url: "/image-gallery",
    title: "How to create a image gallery with Tailwind CSS and Alpinejs",
  },
  {
    url: "/scroll-to-top",
    title: "How to create a scroll to top with Tailwind CSS and Alpinejs",
  },
  {
    url: "/todo",
    title: "How to create a todo list with Tailwind CSS and Alpinejs",
  },
  {
    url: "/pricing-slider",
    title: "How to create a pricing slider with Tailwind CSS and Alpinejs",
  },
  {
    url: "/count-down",
    title: "How to create a countdown with Tailwind CSS and Alpinejs",
  },
  {
    url: "/drawer",
    title: "How to create a bottom drawer  with Tailwind CSS and Alpinejs",
  },
  {
    url: "/multistep",
    title: "How to create a multistep form with Tailwind CSS and Alpinejs",
  },
  {
    url: "/gridtoggle",
    title: "How to create a grid toggle  with Tailwind CSS and Alpinejs",
  },
  {
    url: "/carousel",
    title:
      "How to create a testimonial carousel  with Tailwind CSS and Alpinejs",
  },
  {
    url: "/search",
    title: "How to create a search input  with Tailwind CSS and Alpinejs",
  },
  {
    url: "/cart",
    title: "How to add items to your cart with Tailwind CSS and Alpinejs",
  },
  {
    url: "/contextualmenu",
    title: "How to creat a contextual menu  with Tailwind CSS and Alpinejs",
  },
  {
    url: "/chatbubble",
    title: "How to a create a chat bubble with Tailwind CSS and Alpinejs",
  },
  {
    url: "/alpine-persistent-tabs",
    title: "How to a create persistent tabs with Tailwind CSS and Alpinejs",
  },
  {
    url: "/alpine-password-strength-meter",
    title:
      "How to create a password strength meter with Tailwind CSS and Alpine JS",
  },
  {
    url: "/alpine-dynamic-multiple-step-form",
    title:
      "How to create a dynamic multiple step form with Tailwind CSS and Alpine JS",
  },
];
const javascript = [
  {
    url: "/pricing-table-toggle-with-javascript ",
    title:
      "How to create an interactive pricing table with Astro, Tailwind CSS, and JavaScript",
  },
  {
    url: "/animated-navigation-with-javascript ",
    title:
      "How to create an animated navigation with Astro, Tailwind CSS, and JavaScript",
  },
  {
    url: "/js-sidebar",
    title: "How to create a sidebar  with Tailwind CSS and JavaScript",
  },
  {
    url: "/js-intersection-observer",
    title:
      "How to animate objects with Tailwind CSS and JavaScript intersection observer API",
  },
  {
    url: "/js-testimonial",
    title:
      "How to create an interactive testimonial with Astrojs, Tailwind CSS and JavaScript",
  },
  {
    url: "/js-flyout-menu",
    title:
      "How to create a flyout menu with Astrojs, Tailwind CSS and JavaScript",
  },
  {
    url: "/scroll-progress-bar",
    title:
      "How to a create a scroll progress bar with Tailwind CSS and Javascript",
  },
  {
    url: "/js-cookie-banner",
    title:
      "How to create a dismissible cookie banner with Tailwind CSS and  JavaScript",
  },
  {
    url: "/js-tooltip",
    title: "How to create a tooltip Tailwind CSS and  JavaScript ",
  },
  {
    url: "/js-change-on-scroll",
    title:
      "How to change background on scroll with Tailwind CSS and  JavaScript ",
  },
  {
    url: "/js-vertical-tabs",
    title: "How to create vertical tabs with Tailwind CSS and JavaScript",
  },
  {
    url: "/js-theme-toggle",
    title: "How to create a dark mode toggle with Tailwind CSS and JavaScript",
  },
  {
    url: "/js-tag-input",
    title: "How to create a tag input with Tailwind CSS and JavaScript",
  },
  {
    url: "/js-auth-form",
    title:
      "How to create a Login/Register Form with Tailwind CSS and JavaScript",
  },
  {
    url: "/js-progress-bar",
    title: "How to create a progress-bar with Tailwind CSS and JavaScript",
  },
  {
    url: "/js-rating-system",
    title: " How to create a rating system with Tailwind CSS and  JavaScript",
  },
  {
    url: "/accordion-javascript",
    title:
      "How to create an accordion with Astro, Tailwind CSS, and JavaScript",
  },
  {
    url: "/js-image-gallery",
    title: "How to create a image gallery with Tailwind CSS and JavaScript",
  },
  {
    url: "/js-scroll-to-top",
    title: "How to create a scroll to top with Tailwind CSS and JavaScript",
  },
  {
    url: "/js-todo",
    title: "How to create a todo list with Tailwind CSS and JavaScript",
  },
  {
    url: "/js-pricing-slider",
    title: "How to create a pricing slider with Tailwind CSS and JavaScript",
  },
  {
    url: "/js-count-down",
    title: "How to create a countdown   with Tailwind CSS and JavaScript",
  },
  {
    url: "/js-bottom-drawer",
    title: "How to create a bottom drawer with Tailwind CSS and JavaScript",
  },
  {
    url: "/multistep-js",
    title: "How to create a multistep form with Tailwind CSS and JavaScript",
  },
  {
    url: "/js-gridtoggle",
    title: "How to create a grid toggle  with Tailwind CSS and JavaScript",
  },
  {
    url: "/js-carousel",
    title:
      "How to create a testimonial carousel  with Tailwind CSS and JavaScript",
  },
  {
    url: "/js-search",
    title: "How to create a search input  with Tailwind CSS and JavaScript",
  },
  {
    url: "/js-cart",
    title: "How to add items to your cart with Tailwind CSS and JavaScript'",
  },
  {
    url: "/js-drag-and-drop",
    title: "How to create a drag and drop with Tailwind CSS and JavaScript",
  },
  {
    url: "/js-chatbubble",
    title: "How to a create a chat bubble with Tailwind CSS and JavaScript",
  },
  {
    url: "/js-color-picker",
    title: "How to a create a color picker  with Tailwind CSS and JavaScript",
  },
  {
    url: "/js-infinite-scroll",
    title: "How to create infinite scrolling with Tailwind CSS and JavaScript",
  },
  {
    url: "/js-persistent-tabs",
    title: "How to a create persistent tabs with Tailwind CSS and JavaScript",
  },
  {
    url: "/js-password-strength-meter",
    title:
      "How to create a password strength meter with Tailwind CSS and Javascript",
  },
  {
    url: "/js-image-comparison-slider",
    title:
      "How to create an image comparison slider with Tailwind CSS and Javascript",
  },
  {
    url: "/js-skeleton-loading-screen",
    title:
      "How to create a skeleton loading screen with Tailwind CSS and Javascript",
  },
  {
    url: "/js-drawing-tool",
    title:
      "How to create a basic drawing tool and save it to png with Tailwind CSS and JavaScript",
  },
  {
    url: "/js-combo-box",
    title: "How to create a basic command box with Tailwind CSS and JavaScript",
  },
  {
    url: "/js-kanban-board",
    title:
      "How to create a basic basic kanban board with Tailwind CSS and JavaScript",
  },
  {
    url: "/js-music-visualizer",
    title: "How to create a music visualizer with Tailwind CSS and JavaScript",
  },
  {
    url: "/js-lazy-loading-image-gallery",
    title:
      "How to build a lazy-loading image gallery with Tailwind CSS and JavaScript",
  },
  {
    url: "/js-virtual-keyboard",
    title: "How to build a virtual keyboard with Tailwind CSS and JavaScript",
  },
  {
    url: "/js-video-player",
    title:
      "How to build a custom video player with Tailwind CSS and JavaScript",
  },
  {
    url: "/js-typewriter-effect",
    title:
      "How to create a typewriter effect text animation with Tailwind CSS and JavaScript",
  },
  {
    url: "/js-confetti-animation",
    title:
      "How to create a confetti animation effect using Tailwind CSS and minimal JavaScript",
  },
  {
    url: "/js-circular menu",
    title:
      "How to create a circular menu with Tailwind CSS and minimal JavaScript",
  },
  {
    url: "/js-particle-text",
    title:
      "How to create a particle text effect with Tailwind CSS and JavaScript",
  },
  {
    url: "/js-masonry-layout",
    title:
      "How to create a masonry grid layout with Tailwind CSS and JavaScript",
  },
  {
    url: "/js-bubble-animation",
    title: "How to create a bubble animation with Tailwind CSS and JavaScript",
  },
  {
    url: "/js-color-shifting-card",
    title:
      "How to Create an interactive color-shifting hover card with Tailwind CSS and JavaScript",
  },
];
const astro = [
  {
    url: "astro-button-component",
    title:
      "How to create a button component with variants and icons with Astro JS and Tailwind CSS",
  },
  {
    url: "astro-typography-component",
    title:
      "How to create a typography component with variants with Astro JS and Tailwind CSS",
  },
];

const tabs = [
  { id: "tab1", name: "Tailwind & JS", key: "javascript" },
  { id: "tab2", name: "Tailwind & Alpine", key: "alpinejs" },
  { id: "tab3", name: "Plain Tailwind CSS", key: "tailwind" },
  { id: "tab4", name: "Astro", key: "astro" },
];

const data = {
  javascript,
  alpinejs,
  tailwind,
  astro,
};
---

<BaseLayout>
  <section>
    <div class="px-8 pb-12 pt-12 mx-auto max-w-7xl">
      <div class="w-full max-w-3xl mx-auto">
        <a
          href="https://lexingtonthemes.com/"
          class="focus:ring-0 group ring-none"
        >
          <span class="items-center inline-flex gap-2 group">
            <svg
              class="size-4"
              viewBox="0 0 264 265"
              fill="none"
              xmlns="http://www.w3.org/2000/svg"
            >
              <g clip-path="url(#clip0_697_166)">
                <path
                  d="M137.97 0.264915H125.242V263.474H137.97V0.264915Z"
                  fill="#010101"></path>
                <path
                  d="M137.97 0.264915H125.242V263.474H137.97V0.264915Z"
                  fill="#010101"></path>
                <path
                  d="M263.209 125.506H0V138.233H263.209V125.506Z"
                  fill="#010101"></path>
                <path
                  d="M263.209 125.506H0V138.233H263.209V125.506Z"
                  fill="#010101"></path>
                <path
                  d="M43.024 34.3028L34.0244 43.3026L220.14 229.418L229.14 220.417L43.024 34.3028Z"
                  fill="#010101"></path>
                <path
                  d="M43.024 34.3028L34.0244 43.3026L220.14 229.418L229.14 220.417L43.024 34.3028Z"
                  fill="#010101"></path>
                <path
                  d="M220.14 34.3003L34.0244 220.416L43.024 229.415L229.14 43.3001L220.14 34.3003Z"
                  fill="#010101"></path>
                <path
                  d="M220.14 34.3003L34.0244 220.416L43.024 229.415L229.14 43.3001L220.14 34.3003Z"
                  fill="#010101"></path>
                <path
                  d="M12.1635 76.3637L7.36133 88.1508L251.12 187.461L255.922 175.673L12.1635 76.3637Z"
                  fill="#010101"></path>
                <path
                  d="M12.1635 76.3637L7.36133 88.1508L251.12 187.461L255.922 175.673L12.1635 76.3637Z"
                  fill="#010101"></path>
                <path
                  d="M175.408 7.6448L76.0986 251.403L87.8858 256.205L187.195 12.447L175.408 7.6448Z"
                  fill="#010101"></path>
                <path
                  d="M175.408 7.6448L76.0986 251.403L87.8858 256.205L187.195 12.447L175.408 7.6448Z"
                  fill="#010101"></path>
                <path
                  d="M251.41 76.8067L7.23047 175.089L11.983 186.897L256.162 88.6142L251.41 76.8067Z"
                  fill="#010101"></path>
                <path
                  d="M251.41 76.8067L7.23047 175.089L11.983 186.897L256.162 88.6142L251.41 76.8067Z"
                  fill="#010101"></path>
                <path
                  d="M88.2958 7.50013L76.4883 12.2514L174.744 256.431L186.551 251.68L88.2958 7.50013Z"
                  fill="#010101"></path>
                <path
                  d="M88.2958 7.50013L76.4883 12.2514L174.744 256.431L186.551 251.68L88.2958 7.50013Z"
                  fill="#010101"></path>
              </g>
              <defs>
                <clipPath id="clip0_697_166">
                  <rect width="263.209" height="265" fill="white"></rect>
                </clipPath>
              </defs>
            </svg>
            <p class="text-sm font-semibold text-black">Lexington</p>
          </span>
        </a>
        <div
          class="flex md:flex-row flex-col w-full items-center mt-12 lg:mt-32 gap-2"
        >
          {
            tabs.map((tab) => (
              <button
                class="tab-button rounded-full w-full font-semibold cursor-pointer flex items-center duration-200 ring-offset-white focus:ring-offset-2 focus:ring-2 bg-neutral-50 text-neutral-500 ring ring-neutral-100 hover:text-accent-500 focus:ring-accent-500 h-8 px-4 py-1.5 text-xs md:w-auto justify-center"
                data-tab={tab.id}
              >
                {tab.name}
              </button>
            ))
          }
        </div>
        <!-- Tabs Content -->
        {
          tabs.map((tab) => (
            <div class="tab-content  hidden min-h-dvh mt-12" id={tab.id}>
              <div class="w-full">
                <div class=" w-full">
                  <h1 class="leading-tight font-medium text-black text-lg">
                    {tab.name}
                  </h1>
                  <p class="text-balance text-neutral-500">
                    Tutorials made with {tab.name}
                  </p>
                </div>
                <dl class="flex flex-col mt-4 border-t border-neutral-200 pt-4 divide-y divide-neutral-200">
                  {data[tab.key].map((template, index) => (
                    <div class="py-4 inline-flex text-sm items-start gap-4">
                      <dt class="text-neutral-500 hover:text-accent-500 w-full">
                        <a href={template.url} class="inline-flex items-center">
                          {template.title}
                        </a>
                      </dt>
                      <dd class="order-first">
                        {(data[tab.key].length - index)
                          .toString()
                          .padStart(2, "0") + "."}
                      </dd>
                    </div>
                  ))}
                </dl>
              </div>
            </div>
          ))
        }
      </div>
    </div>
  </section>
</BaseLayout>
<script type="module">
  document.addEventListener("DOMContentLoaded", function () {
    const tabButtons = document.querySelectorAll(".tab-button");
    const tabContents = document.querySelectorAll(".tab-content");
    // Retrieve last active tab from localStorage
    let activeTab = localStorage.getItem("activeTab") || "tab1";
    function activateTab(tabId) {
      tabButtons.forEach((button) => {
        button.classList.toggle(
          "ring-orange-500",
          button.dataset.tab === tabId
        );
        button.classList.toggle(
          "ring-accent-500",
          "ring-2",
          button.dataset.tab === tabId
        );
        button.classList.toggle(
          "text-neutral-600",
          button.dataset.tab !== tabId
        );
        button.classList.toggle(
          "ring-transparent",
          button.dataset.tab !== tabId
        );
      });
      tabContents.forEach((content) => {
        content.classList.toggle("hidden", content.id !== tabId);
      });
      localStorage.setItem("activeTab", tabId); // Save to localStorage
    }
    // Initialize the active tab
    activateTab(activeTab);
    tabButtons.forEach((button) => {
      button.addEventListener("click", function () {
        activateTab(this.dataset.tab);
      });
    });
  });
</script>

---
import Button from "@/components/fundations/elements/Button.astro";
import PlaceHolderIcon from "@/components/fundations/icons/PlaceHolderIcon.astro";
// Fundations
import BaseLayout from "@/layouts/BaseLayout.astro";
import Wrapper from "@/components/fundations/containers/Wrapper.astro";
import TutorialBanner from "@/components/global/TutorialBanner.astro";
import {
  generateArticleSchema,
  generateBreadcrumbSchema,
  generateHowToSchema,
} from "@/utils/jsonLd";

// SEO Configuration
const seoConfig = {
  title: "Create Button Components with Variants in Astro.js",
  description:
    "Learn to build reusable button components with Astro.js and Tailwind CSS. Includes variants, sizes, and icon support.",
  canonical: "/astro-button-component",
  jsonLd: [
    generateArticleSchema({
      title: "Create Button Components with Variants in Astro.js",
      description:
        "Learn to build reusable button components with Astro.js and Tailwind CSS. Includes variants, sizes, and icon support.",
      url: "/astro-button-component",
      datePublished: "2025-10-01T06:27:00.000Z",
      dateModified: "2025-10-01T06:27:00.000Z",
      keywords: [
        "Astro.js",
        "Button Component",
        "Tailwind CSS",
        "Component Variants",
        "Tutorial",
      ],
    }),
    generateBreadcrumbSchema([
      { name: "Home", url: "/" },
      {
        name: "Astro Button Component Tutorial",
        url: "/astro-button-component",
      },
    ]),
    generateHowToSchema({
      name: "Create Button Components with Variants in Astro.js",
      description: "Build reusable button components with multiple variants",
      totalTime: "PT15M",
      steps: [
        {
          name: "Create Astro component file",
          text: "Set up the base Button.astro component structure",
        },
        {
          name: "Define component props",
          text: "Add TypeScript interface for variants, sizes, and other props",
        },
        {
          name: "Build variant styles",
          text: "Create Tailwind CSS classes for different button styles",
        },
        {
          name: "Add size variations",
          text: "Implement responsive size options for buttons",
        },
        {
          name: "Test all combinations",
          text: "Verify all variants and sizes work correctly",
        },
      ],
    }),
  ],
};
---

<BaseLayout seo={seoConfig}>
  <section>
  <h1 class="sr-only">Create Button Components with Variants in Astro.js</h1>

    <TutorialBanner
      tutorialUrl="https://lexingtonthemes.com/tutorials/how-to-create-a-button-component-with-variants-and-icons-with-astro-js-and-tailwind-css/"
      codeUrl="https://github.com/Lexington-Themes/lexington-tutorials/blob/main/src/pages/astro-button-component/index.astro"
    />
    <Wrapper class="py-24">
      <!-- Default button sizes -->
      <div class="flex flex-wrap items-end py-8 mx-auto gap-4">
        <Button variant="default" size="xs">Button Default</Button>
        <Button variant="default" size="sm">Button Default</Button>
        <Button variant="default" size="base">Button Default</Button>
        <Button variant="default" size="md">Button Default</Button>
        <Button variant="default" size="lg">Button Default</Button>
        <Button variant="default" size="xl">Button Default</Button>
      </div>

      <!-- Accent button sizes -->
      <div class="flex flex-wrap items-end py-8 mx-auto gap-4">
        <Button variant="accent" size="xs">Button Accent</Button>
        <Button variant="accent" size="sm">Button Accent</Button>
        <Button variant="accent" size="base">Button Accent</Button>
        <Button variant="accent" size="md">Button Accent</Button>
        <Button variant="accent" size="lg">Button Accent</Button>
        <Button variant="accent" size="xl">Button Accent</Button>
      </div>

      <!-- Muted button sizes -->
      <div class="flex flex-wrap items-end py-8 mx-auto gap-4">
        <Button variant="muted" size="xs">Button Muted</Button>
        <Button variant="muted" size="sm">Button Muted</Button>
        <Button variant="muted" size="base">Button Muted</Button>
        <Button variant="muted" size="md">Button Muted</Button>
        <Button variant="muted" size="lg">Button Muted</Button>
        <Button variant="muted" size="xl">Button Muted</Button>
      </div>
    </Wrapper>
  </section>
</BaseLayout>

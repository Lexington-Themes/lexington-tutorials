---
import BaseLayout from "@/layouts/BaseLayout.astro";
import Wrapper from "@/components/fundations/containers/Wrapper.astro";
import TutorialBanner from "@/components/global/TutorialBanner.astro";
import {
  generateArticleSchema,
  generateBreadcrumbSchema,
  generateHowToSchema,
} from "@/utils/jsonLd";

// SEO Configuration
const seoConfig = {
  title: "Create Intersection Observer with Alpine.js",
  description: "Learn to build intersection observer components using Alpine.js and Tailwind CSS. Includes responsive design and modern styling.",
  canonical: "/intersection-observer",
  jsonLd: [
    generateArticleSchema({
      title: "Create Intersection Observer with Alpine.js",
      description: "Learn to build intersection observer components using Alpine.js and Tailwind CSS. Includes responsive design and modern styling.",
      url: "/intersection-observer",
      datePublished: "2025-10-01T06:22:29.073Z",
      dateModified: "2025-10-01T06:22:29.073Z",
      keywords: ["Tailwind CSS","Alpine.js","Intersection Observer","Tutorial","Web Development"],
    }),
    generateBreadcrumbSchema([
      { name: "Home", url: "/" },
      { name: "Create Intersection Observer with Alpine.js", url: "/intersection-observer" },
    ]),
    generateHowToSchema({
      name: "Create Intersection Observer with Alpine.js",
      description: "Learn to build intersection observer components using Alpine.js and Tailwind CSS. Includes responsive design and modern styling.",
      totalTime: "PT20M",
      steps: [
            {
                  "name": "Set up HTML structure",
                  "text": "Create the base intersection observer container and elements"
            },
            {
                  "name": "Add Alpine.js interactivity",
                  "text": "Initialize Alpine.js to handle component state and interactions"
            },
            {
                  "name": "Style with Tailwind CSS",
                  "text": "Apply utility classes for responsive layout and modern design"
            },
            {
                  "name": "Add accessibility features",
                  "text": "Implement ARIA attributes and keyboard navigation"
            },
            {
                  "name": "Test the component",
                  "text": "Verify functionality across different browsers and devices"
            }
      ],
    }),
  ],
};
---

<style>
  /* Apply a perspective to all containers to enhance the 3D effect of the transformations */
  .perspective-container {
    perspective: 1000px;
  }
</style>
<BaseLayout seo={seoConfig}>
  <!-- Introductory section with a title -->
  <section class="">
  <h1 class="sr-only">Create Intersection Observer with Alpine.js</h1>

    <!-- Starts links to tutorial -->
    <TutorialBanner
      tutorialUrl="https://lexingtonthemes.com/tutorials/how-to-animate-objects-with-tailwind-css-and-alpinejs-intersection-observer/"
      codeUrl="https://github.com/Lexington-Themes/lexington-tutorials/blob/main/src/pages/intersection-observer/index.astro"
    />
    <!-- Ends links to tutorial -->
    <Wrapper class="py-24 text-center">Scroll </Wrapper>
  </section>
  <!--
  // Section for the first image with a rotation around the Y-axis
  //
  // Section for the second image with a rotation around the X-axis
  // Initializes Alpine JS data for rotation around the X-axis
  // The x-intersect directive triggers the animation function once on element's first intersection with the viewport
  // Applies the dynamic rotation style to the image. The rotation is more subtle due to the lower target degree
  -->
  <section class="overflow-hidden">
    <Wrapper class="flex flex-col h-screen my-24">
      <div
        x-data="{ degree: 0, target: 360, rotate() { let interval = setInterval(() => { if (this.degree < this.target) { this.degree += 5; } else { clearInterval(interval); } }, 50); } }"
        x-intersect.once="rotate()"
        class="mt-12 perspective-container"
      >
        <img
          :style="`transform: perspective(1000px) rotateY(${degree}deg)`"
          class="w-64 mx-auto transition-transform duration-1000 ease-in-out md:w-full rounded-3xl md:max-w-xl"
          src="https://i.pinimg.com/564x/78/d1/c0/78d1c06554aead1dc1d1490f08d39ffd.jpg"
        />
      </div>
    </Wrapper>
  </section>

  <section class="overflow-hidden">
    <Wrapper class="flex flex-col h-screen my-24">
      <div
        x-data="{ degree: 0, target: 30, animate() { let interval = setInterval(() => { if (this.degree < this.target) { this.degree += 1; } else { clearInterval(interval); } }, 50); } }"
        x-intersect.once="animate()"
        class="perspective-container"
      >
        <img
          :style="`transform: perspective(1000px) rotateX(${degree}deg)`"
          class="w-64 mx-auto transition-transform duration-1000 ease-in-out md:w-full rounded-3xl md:max-w-xl"
          src="https://i.pinimg.com/564x/78/d1/c0/78d1c06554aead1dc1d1490f08d39ffd.jpg"
        />
      </div>
    </Wrapper>
  </section>
  <!-- Starts links to tutorial -->
  <div
    class="fixed inset-x-0 bottom-0 p-2 pointer-events-none sm:flex sm:justify-center"
  >
    <div
      class="flex w-full max-w-md bg-white border rounded-lg shadow-xl pointer-events-auto divide-x divide-base-200 border-base-200"
    >
      <div class="flex items-center flex-1 w-0 p-4">
        <div class="w-full">
          <p class="text-sm font-medium text-base-900">Tutorial</p>
          <p class="mt-1 text-sm text-base-500">
            How to animate objects with Tailwind CSS and Alpinejs intersection
            observer
          </p>
          <p class="mt-2 text-xs underline text-accent-500">
            <a href="https://lexingtonthemes.com"> by Â© Lexington Themes</a>
          </p>
        </div>
      </div>
      <div class="flex">
        <div class="flex flex-col divide-y divide-base-200">
          <div class="flex flex-1 h-0">
            <a
              href="https://lexingtonthemes.com/tutorials/how-to-animate-objects-with-tailwind-css-and-alpinejs-intersection-observer/"
              type="button"
              class="flex items-center justify-center w-full px-4 py-3 text-sm font-medium rounded-none rounded-tr-lg text-accent-600 hover:text-accent-500 focus:z-10 focus:outline-none focus:ring-2 focus:ring-accent-500"
              >Tutorial</a
            >
          </div>
          <div class="flex flex-1 h-0">
            <a
              href="https://github.com/Lexington-Themes/lexington-tutorials/blob/main/src/pages/intersection-observer/index.astro"
              class="flex items-center justify-center w-full px-4 py-3 text-sm font-medium rounded-none rounded-br-lg text-base-700 hover:text-base-500 focus:outline-none focus:ring-2 focus:ring-accent-500"
              >Get the code</a
            >
          </div>
        </div>
      </div>
    </div>
  </div>
  <!-- Ends links to tutorial -->
</BaseLayout>

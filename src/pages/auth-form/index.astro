---
import BaseLayout from "@/layouts/BaseLayout.astro";
import Wrapper from "@/components/fundations/containers/Wrapper.astro";
import TutorialBanner from "@/components/global/TutorialBanner.astro";
import {
  generateArticleSchema,
  generateBreadcrumbSchema,
  generateHowToSchema,
} from "@/utils/jsonLd";

// SEO Configuration
const seoConfig = {
  title: "How to Build a Form with Alpine.js and Tailwind CSS",
  description: "Learn to build form components using Alpine.js and Tailwind CSS. Includes validation and error handling.",
  canonical: "/auth-form",
  jsonLd: [
    generateArticleSchema({
      title: "How to Build a Form with Alpine.js and Tailwind CSS",
      description: "Learn to build form components using Alpine.js and Tailwind CSS. Includes validation and error handling.",
      url: "/auth-form",
      datePublished: "2025-10-01T06:22:29.068Z",
      dateModified: "2025-10-01T06:22:29.068Z",
      keywords: ["Tailwind CSS","Alpine.js","Form","Tutorial","Web Development"],
    }),
    generateBreadcrumbSchema([
      { name: "Home", url: "/" },
      { name: "How to Build a Form with Alpine.js and Tailwind CSS", url: "/auth-form" },
    ]),
    generateHowToSchema({
      name: "How to Build a Form with Alpine.js and Tailwind CSS",
      description: "Learn to build form components using Alpine.js and Tailwind CSS. Includes validation and error handling.",
      totalTime: "PT20M",
      steps: [
            {
                  "name": "Set up HTML structure",
                  "text": "Create the base form container and elements"
            },
            {
                  "name": "Add Alpine.js interactivity",
                  "text": "Initialize Alpine.js to handle component state and interactions"
            },
            {
                  "name": "Style with Tailwind CSS",
                  "text": "Apply utility classes for responsive layout and modern design"
            },
            {
                  "name": "Add accessibility features",
                  "text": "Implement ARIA attributes and keyboard navigation"
            },
            {
                  "name": "Test the component",
                  "text": "Verify functionality across different browsers and devices"
            }
      ],
    }),
  ],
};
---

<BaseLayout seo={seoConfig}>
  <section>
  <h1 class="sr-only">How to Build a Form with Alpine.js and Tailwind CSS</h1>

    <TutorialBanner
      tutorialUrl="https://lexingtonthemes.com/tutorials/how-to-create-a-login-register-form-with-tailwind-and-alpinejs/"
      codeUrl="https://github.com/Lexington-Themes/lexington-tutorials/blob/main/src/pages/auth-form/index.astro"
    />
    <Wrapper class="py-24">
      <!--  Starts component -->
      <div
        x-data="{ loginEmail: '', loginPassword: '', passwordPattern: /^(?=.*[A-Z])(?=.*\W).+$/, showPassword: false }"
      >
        <form class="mx-auto w-fit" x-on:submit.prevent="login">
          <div class="py-2 space-y-3">
            <label for="login_email" class="block text-sm text-base-700"
              >Email</label
            >
            <input
              type="email"
              id="login_email"
              x-model="loginEmail"
              class="block w-full h-12 px-4 py-3 text-xs border-0 rounded-lg appearance-none placeholder-base-500 bg-base-100 text-accent-500 focus:border-accent-500 focus:bg-white focus:outline-none focus:ring-accent-500 focus:ring-inset focus:ring-2"
              placeholder="Enter your email"
              required
            />
            <p x-show="!loginEmail" class="mt-1 text-xs text-red-500">
              Email is required
            </p>
          </div>
          <div class="py-2 space-y-3">
            <label for="login_password" class="block text-sm text-base-700"
              >Password</label
            >
            <div class="relative">
              <input
                :type="showPassword ? 'text' : 'password'"
                id="login_password"
                x-model="loginPassword"
                class="block w-full h-12 px-4 py-3 text-xs border-0 rounded-lg appearance-none placeholder-base-500 bg-base-100 text-accent-500 focus:border-accent-500 focus:bg-white focus:outline-none focus:ring-accent-500 focus:ring-2 focus:ring-inset"
                placeholder="Enter your password"
                required
              />
              <span
                class="absolute inset-y-0 right-0 flex items-center pr-4 text-xs cursor-pointer text-base-400"
                x-text="showPassword ? 'Hide' : 'Show'"
                @click="showPassword = !showPassword">Show</span
              >
            </div>
            <p class="mt-1 text-xs text-base-500 lg:text-pretty">
              Password must contain at least one capital letter and a special
              character.
            </p>
            <p
              x-show="loginPassword && !passwordPattern.test(loginPassword)"
              class="mt-1 text-xs text-red-500"
            >
              Password does not meet requirements
            </p>
          </div>
          <div class="mt-4">
            <button
              type="submit"
              class="w-full h-12 px-8 py-2 text-sm font-semibold text-white rounded-full bg-accent-600 hover:bg-accent-500 focus:outline-none focus:ring-2 focus:ring-accent-500 focus:ring-offset-2"
              >Login</button
            >
          </div>
        </form>
      </div>
    </Wrapper>
  </section>
</BaseLayout>

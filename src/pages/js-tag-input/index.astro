---
import BaseLayout from "@/layouts/BaseLayout.astro";
import Wrapper from "@/components/fundations/containers/Wrapper.astro";
import TutorialBanner from "@/components/global/TutorialBanner.astro";
import {
  generateArticleSchema,
  generateBreadcrumbSchema,
  generateHowToSchema,
} from "@/utils/jsonLd";

// SEO Configuration
const seoConfig = {
  title: "How to Create a Tag Input with JavaScript and Tailwind CSS",
  description: "Learn to build tag input components using JavaScript and Tailwind CSS. Includes add/remove tags and keyboard support.",
  canonical: "/js-tag-input",
  jsonLd: [
    generateArticleSchema({
      title: "How to Create a Tag Input with JavaScript and Tailwind CSS",
      description: "Learn to build tag input components using JavaScript and Tailwind CSS. Includes add/remove tags and keyboard support.",
      url: "/js-tag-input",
      datePublished: "2025-10-01T06:22:29.081Z",
      dateModified: "2025-10-01T06:22:29.081Z",
      keywords: ["Tailwind CSS","JavaScript","Vanilla JS","Tag Input","Tutorial","Web Development"],
    }),
    generateBreadcrumbSchema([
      { name: "Home", url: "/" },
      { name: "How to Create a Tag Input with JavaScript and Tailwind CSS", url: "/js-tag-input" },
    ]),
    generateHowToSchema({
      name: "How to Create a Tag Input with JavaScript and Tailwind CSS",
      description: "Learn to build tag input components using JavaScript and Tailwind CSS. Includes add/remove tags and keyboard support.",
      totalTime: "PT20M",
      steps: [
            {
                  "name": "Set up HTML structure",
                  "text": "Create the base tag input container and elements"
            },
            {
                  "name": "Add JavaScript interactivity",
                  "text": "Initialize JavaScript to handle component state and interactions"
            },
            {
                  "name": "Style with Tailwind CSS",
                  "text": "Apply utility classes for responsive layout and modern design"
            },
            {
                  "name": "Add accessibility features",
                  "text": "Implement ARIA attributes and keyboard navigation"
            },
            {
                  "name": "Test the component",
                  "text": "Verify functionality across different browsers and devices"
            }
      ],
    }),
  ],
};
---

<BaseLayout seo={seoConfig}>
  <section>
  <h1 class="sr-only">How to Create a Tag Input with JavaScript and Tailwind CSS</h1>

    <!-- Starts links to tutorial -->
    <TutorialBanner
      tutorialUrl="https://lexingtonthemes.com/tutorials/how-to-create-a-tag-input-with-tailwind-css-and-javascript/"
      codeUrl="https://github.com/Lexington-Themes/lexington-tutorials/blob/main/src/pages/js-tag-input/index.astro"
    />
    <!-- Ends links to tutorial -->
    <Wrapper class="py-24 lg:py-62">
      <!-- Starts component -->
      <!-- Tag Input -->
      <div class="mx-auto w-fit" id="tags-input-wrapper">
        <!-- Input Field -->
        <input
          id="new-tag-input"
          class="w-full h-8 text-xs border-base-300 rounded-md focus:border-accent-500 focus:ring-accent-500"
          type="text"
          placeholder="Add tags (press Enter to add)"
        />
        <!-- Existing Tags -->
        <div class="flex flex-wrap mt-4 gap-2" id="tags-list"></div>
      </div>
      <!-- Ends component -->
    </Wrapper>
  </section>
</BaseLayout>
<script type="module">
  document.addEventListener("DOMContentLoaded", function () {
    const newTagInput = document.getElementById("new-tag-input");
    const tagsList = document.getElementById("tags-list");
    let tags = [];

    newTagInput.addEventListener("keydown", function (event) {
      if (event.key === "Enter") {
        event.preventDefault();
        const tag = newTagInput.value.trim();
        if (tag) {
          tags.push(tag);
          newTagInput.value = "";
          renderTags();
        }
      }
    });

    function renderTags() {
      tagsList.innerHTML = "";
      tags.forEach((tag, index) => {
        const tagElement = document.createElement("div");
        tagElement.className =
          "inline-flex items-center gap-x-0.5 rounded-md bg-accent-50 px-2 py-1 text-xs font-medium text-accent-700 ring-1 ring-inset ring-accent-700/10";

        const tagText = document.createElement("span");
        tagText.textContent = tag;

        const removeButton = document.createElement("button");
        removeButton.className = "ml-2";
        removeButton.innerHTML =
          '<svg class="w-4 h-4 text-red-500" fill="none" viewBox="0 0 24 24" stroke="currentColor"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"/></svg>';
        removeButton.addEventListener("click", function () {
          tags.splice(index, 1);
          renderTags();
        });

        tagElement.appendChild(tagText);
        tagElement.appendChild(removeButton);
        tagsList.appendChild(tagElement);
      });
    }
  });
</script>

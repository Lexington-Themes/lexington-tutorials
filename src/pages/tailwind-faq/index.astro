---
// Fundations
import BaseLayout from "@/layouts/BaseLayout.astro";
import Wrapper from "@/components/fundations/containers/Wrapper.astro";
import TutorialBanner from "@/components/global/TutorialBanner.astro";
const faqs = [
  {
    question: "What is Tailwind CSS?",
    answer:
      "Tailwind CSS is a utility-first CSS framework for rapidly building custom designs. It allows you to style your elements directly in your HTML using predefined classes.",
  },
  {
    question: "How does the peer class work in Tailwind CSS?",
    answer:
      "The `peer` class in Tailwind CSS allows you to style elements based on the state of a sibling element. It is commonly used in combination with hidden checkboxes or radio buttons to create interactive components without JavaScript.",
  },
  {
    question: "Can Tailwind CSS replace traditional CSS frameworks?",
    answer:
      "Tailwind CSS offers a different approach compared to traditional CSS frameworks like Bootstrap. It provides more flexibility and customizability, making it suitable for projects where a high degree of design control is desired.",
  },
];
---

<BaseLayout>
  <section>
    <TutorialBanner
      tutorialUrl="https://lexingtonthemes.com/tutorials/how-to-create-a-javascript-free-animated-accordion-faq-section-with-only-tailwind-css"
      codeUrl="https://github.com/Lexington-Themes/lexington-tutorials/blob/main/src/pages/tailwind-faq/index.astro"
    />
    <Wrapper class="py-24 lg:py-48">
      <div class="divide-y divide-base-200">
        {
          faqs.map((faq, index) => (
            <div class="py-4">
              <input type="checkbox" id={`faq${index}`} class="hidden peer" />
              <label
                for={`faq${index}`}
                class="flex items-center justify-between py-2 cursor-pointer "
              >
                <h4>{faq.question}</h4>
                <svg
                  class="size-4 text-base-500 peer-checked:rotate-180 transition-transform duration-300"
                  fill="none"
                  stroke="currentColor"
                  viewBox="0 0 24 24"
                  xmlns="http://www.w3.org/2000/svg"
                >
                  <path
                    stroke-linecap="round"
                    stroke-linejoin="round"
                    stroke-width="2"
                    d="M19 9l-7 7-7-7"
                  />
                </svg>
              </label>
              <div class="overflow-hidden max-h-0 peer-checked:max-h-100 text-sm text-balance text-base-500 transition-all duration-500">
                <p>{faq.answer}</p>
              </div>
            </div>
          ))
        }
      </div>
    </Wrapper>
  </section>
</BaseLayout>

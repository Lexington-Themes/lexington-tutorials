---
import BaseLayout from "@/layouts/BaseLayout.astro";
import Button from "@/components/fundations/elements/Button.astro";
import Wrapper from "@/components/fundations/containers/Wrapper.astro";
import TutorialBanner from "@/components/global/TutorialBanner.astro";
import {
  generateArticleSchema,
  generateBreadcrumbSchema,
  generateHowToSchema,
} from "@/utils/jsonLd";

// SEO Configuration
const seoConfig = {
  title: "How to Create Tooltips with Alpine.js and Tailwind CSS",
  description:
    "Learn to build tooltip components using Alpine.js and Tailwind CSS. Includes hover effects and positioning.",
  canonical: "/js-tooltip",
  jsonLd: [
    generateArticleSchema({
      title: "How to Create Tooltips with Alpine.js and Tailwind CSS",
      description:
        "Learn to build tooltip components using Alpine.js and Tailwind CSS. Includes hover effects and positioning.",
      url: "/js-tooltip",
      datePublished: "2025-10-01T06:22:29.082Z",
      dateModified: "2025-10-01T06:22:29.082Z",
      keywords: [
        "Tailwind CSS",
        "Alpine.js",
        "Tooltip",
        "Tutorial",
        "Web Development",
      ],
    }),
    generateBreadcrumbSchema([
      { name: "Home", url: "/" },
      {
        name: "How to Create Tooltips with Alpine.js and Tailwind CSS",
        url: "/js-tooltip",
      },
    ]),
    generateHowToSchema({
      name: "How to Create Tooltips with Alpine.js and Tailwind CSS",
      description:
        "Learn to build tooltip components using Alpine.js and Tailwind CSS. Includes hover effects and positioning.",
      totalTime: "PT10M",
      steps: [
        {
          name: "Set up HTML structure",
          text: "Create the base tooltip container and elements",
        },
        {
          name: "Add Alpine.js interactivity",
          text: "Initialize Alpine.js to handle component state and interactions",
        },
        {
          name: "Style with Tailwind CSS",
          text: "Apply utility classes for responsive layout and modern design",
        },
        {
          name: "Add accessibility features",
          text: "Implement ARIA attributes and keyboard navigation",
        },
        {
          name: "Test the component",
          text: "Verify functionality across different browsers and devices",
        },
      ],
    }),
  ],
};
---

<BaseLayout seo={seoConfig}>
  <section>
  <h1 class="sr-only">How to Create Tooltips with Alpine.js and Tailwind CSS</h1>

    <!-- Starts links to tutorial -->
    <TutorialBanner
      tutorialUrl="https://lexingtonthemes.com/tutorials/how-to-create-a-tooltip-with-tailwind-css-and-javascript/"
      codeUrl="https://github.com/Lexington-Themes/lexington-tutorials/blob/main/src/pages/js-tooltip/index.astro"
    />
    <!-- Ends links to tutorial -->
    <Wrapper class="py-24">
      <!--
      // Alpine JS component starts here.
      //
      // x-data defines the data scope for this component.
      // In this case, we have a single piece of data: "open", which is a boolean.
      // When the mouse hovers over this div, set "open" to true
      // When the mouse leaves this div, set "open" to false
    -->

      <!-- Starts component -->
      <div
        id="tooltip-container"
        class="relative flex items-center justify-center duration-200"
      >
        <Button size="sm" variant="accent" id="tooltip-button" type="button">
          Hover over me babe
        </Button>
        <div
          id="tooltip"
          class="absolute z-10 flex items-center justify-center w-56 h-20 mt-2 text-center text-white shadow-lg top-full rounded-md bg-accent-600"
          style="display: none;"
        >
          <div
            role="menu"
            aria-orientation="vertical"
            aria-labelledby="options-menu"
          >
            <a
              href="#"
              class="block px-4 py-2 mx-auto text-xl text-white"
              role="menuitem"
            >
              Hello pomelo, I am your JS tooltip!
            </a>
          </div>
        </div>
      </div>
      <!-- Ends component -->
    </Wrapper>
  </section>
</BaseLayout>

<script type="module">
  document.addEventListener("DOMContentLoaded", () => {
    const tooltipContainer = document.getElementById("tooltip-container");
    const tooltip = document.getElementById("tooltip");

    const showTooltip = () => (tooltip.style.display = "flex");
    const hideTooltip = () => (tooltip.style.display = "none");

    tooltipContainer.addEventListener("mouseenter", showTooltip);
    tooltipContainer.addEventListener("mouseleave", hideTooltip);
  });
</script>

---
import BaseLayout from "@/layouts/BaseLayout.astro";
import Wrapper from "@/components/fundations/containers/Wrapper.astro";
import TutorialBanner from "@/components/global/TutorialBanner.astro";
import {
  generateArticleSchema,
  generateBreadcrumbSchema,
  generateHowToSchema,
} from "@/utils/jsonLd";

// SEO Configuration
const seoConfig = {
  title: "How to Create a Tag Input with Tailwind CSS and Tailwind CSS",
  description: "Learn to build tag input components using Tailwind CSS and Tailwind CSS. Includes add/remove tags and keyboard support.",
  canonical: "/html-output-tag",
  jsonLd: [
    generateArticleSchema({
      title: "How to Create a Tag Input with Tailwind CSS and Tailwind CSS",
      description: "Learn to build tag input components using Tailwind CSS and Tailwind CSS. Includes add/remove tags and keyboard support.",
      url: "/html-output-tag",
      datePublished: "2025-10-01T06:22:29.072Z",
      dateModified: "2025-10-01T06:22:29.072Z",
      keywords: ["Tailwind CSS","Tag Input","Tutorial","Web Development"],
    }),
    generateBreadcrumbSchema([
      { name: "Home", url: "/" },
      { name: "How to Create a Tag Input with Tailwind CSS and Tailwind CSS", url: "/html-output-tag" },
    ]),
    generateHowToSchema({
      name: "How to Create a Tag Input with Tailwind CSS and Tailwind CSS",
      description: "Learn to build tag input components using Tailwind CSS and Tailwind CSS. Includes add/remove tags and keyboard support.",
      totalTime: "PT20M",
      steps: [
            {
                  "name": "Set up HTML structure",
                  "text": "Create the base tag input container and elements"
            },
            {
                  "name": "Add Tailwind CSS interactivity",
                  "text": "Initialize Tailwind CSS to handle component state and interactions"
            },
            {
                  "name": "Style with Tailwind CSS",
                  "text": "Apply utility classes for responsive layout and modern design"
            },
            {
                  "name": "Add accessibility features",
                  "text": "Implement ARIA attributes and keyboard navigation"
            },
            {
                  "name": "Test the component",
                  "text": "Verify functionality across different browsers and devices"
            }
      ],
    }),
  ],
};
---

<BaseLayout seo={seoConfig}>
  <section>
    <div
      class="relative flex flex-col justify-center w-full p-8 py-24 mx-auto 2xl:max-w-7xl"
    >
      <div class="max-w-xl mx-auto text-center">
        <div
          class="w-full max-w-sm mx-auto prose text-base-500 prose-sm prose-headings:font-normal prose-headings:text-xl"
        >
          <div>
            <h1>HTML Datalist</h1>
          </div>
        </div>
      </div>
      <div class="w-full max-w-md pt-6 mx-auto mt-6 border-t">
        <!-- Starts component -->
        <form
          class="flex flex-col text-sm gap-6 text-base-500 prose"
          oninput="x.value=parseInt(a.value)+parseInt(b.value)"
        >
          <div class="flex items-center justify-between">
            <div class="flex items-center gap-2">
              +<input
                type="number"
                id="b"
                value="25"
                class="block w-full h-12 px-4 py-3 text-xs border-0 rounded-lg appearance-none placeholder-base-500 bg-base-100 text-accent-500 focus:border-accent-500 focus:bg-white focus:outline-none focus:ring-accent-500 focus:ring-inset focus:ring-2"
              />
              =
            </div>
            <div
              class="flex items-center justify-center text-xs rounded-full gap-2 bg-base-50 text-accent-600 size-12"
            >
              <output name="x" for="a b"></output>
            </div>
          </div>
          <input type="range" id="a" value="50" />
        </form>
        <!-- Starts links to tutorial -->
        <div
          class="fixed inset-x-0 bottom-0 p-2 pointer-events-none sm:flex sm:justify-center"
        >
          <div
            class="flex w-full max-w-md bg-white border rounded-lg shadow-xl pointer-events-auto divide-x divide-base-200 border-base-200"
          >
            <div class="flex items-center flex-1 w-0 p-4">
              <div class="w-full">
                <p class="text-sm font-medium text-base-900">Tutorial</p>
                <p class="mt-1 text-sm text-base-500">
                  How to use the HTML output tag for displaying the result of a
                  calculation
                </p>
                <p class="mt-2 text-xs underline text-accent-600">
                  <a href="https://lexingtonthemes.com">
                    by Â© Lexington Themes</a
                  >
                </p>
              </div>
            </div>
            <div class="flex">
              <div class="flex flex-col divide-y divide-base-200">
                <div class="flex flex-1 h-0">
                  <a
                    href="https://lexingtonthemes.com/tutorials/how-to-use-the-output-tag-for-displaying-the-result-of-a-calculation"
                    type="button"
                    class="flex items-center justify-center w-full px-4 py-3 text-sm font-medium rounded-none rounded-tr-lg text-accent-600 hover:text-accent-600 focus:z-10 focus:outline-none focus:ring-2 focus:ring-accent-600"
                    >Tutorial</a
                  >
                </div>
                <div class="flex flex-1 h-0">
                  <a
                    href="https://github.com/Lexington-Themes/lexington-tutorials/blob/main/src/pages/html-output-tag/index.astro"
                    class="flex items-center justify-center w-full px-4 py-3 text-sm font-medium rounded-none rounded-br-lg text-base-700 hover:text-base-500 focus:outline-none focus:ring-2 focus:ring-accent-600"
                    >Get the code</a
                  >
                </div>
              </div>
            </div>
          </div>
        </div>
        <!-- Ends links to tutorial -->
      </div>
    </div>
  </section></BaseLayout
>

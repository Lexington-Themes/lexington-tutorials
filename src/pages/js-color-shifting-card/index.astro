---
// Fundations
import BaseLayout from "@/layouts/BaseLayout.astro";
import Wrapper from "@/components/fundations/containers/Wrapper.astro";
import TutorialBanner from "@/components/global/TutorialBanner.astro";
---

<BaseLayout>
  <section>
    <!-- Starts links to tutorial -->
    <TutorialBanner
      tutorialUrl="https://lexingtonthemes.com/tutorials/how-to-create-an-interactive-color-shifting-hover-card-with-tailwind-css-and-alpinejs"
      codeUrl="https://github.com/Lexington-Themes/lexington-tutorials/blob/main/src/pages/js-color-shifting-card/index.astro"
    />
    <Wrapper class="flex justify-center h-full py-24 lg:py-48 flez-col">
      <div
        id="colorCard"
        class="relative w-full max-w-md overflow-hidden rounded-xl  transition-all duration-300 bg-base-50 hover:scale-105"
      >
        <div class="p-6">
          <h2
            id="cardTitle"
            class="mb-2 text-2xl font-bold text-base-800 transition-colors duration-300"
          >
            Interactive color card
          </h2>
          <p
            id="cardText"
            class="text-base-500 transition-colors duration-300 text-balance"
          >
            Move your mouse around to see the magic happen! The colors will
            shift based on your cursor position.
            <br />
            <br />
            <span class="font-semibold" id="coordinates">X: 0% Y: 0%</span>
          </p>

          <div class="flex flex-col mt-4 md:flex-row gap-2">
            <button
              id="primaryBtn"
              class="w-full h-10 px-4 py-2 text-white rounded-lg md:w-auto transition-all duration-300 bg-accent-500 hover:bg-accent-600"
            >
              Primary
            </button>
            <button
              id="secondaryBtn"
              class="w-full h-10 px-4 py-2 border rounded-lg md:w-auto transition-all duration-300 border-accent-500 text-accent-500 hover:bg-accent-500 hover:text-white"
            >
              Secodnary
            </button>
          </div>
        </div>
      </div>
    </Wrapper>
  </section>
</BaseLayout>
<script type="module">
  const card = document.getElementById("colorCard");
  const cardTitle = document.getElementById("cardTitle");
  const cardText = document.getElementById("cardText");
  const coordinates = document.getElementById("coordinates");
  const primaryBtn = document.getElementById("primaryBtn");
  const secondaryBtn = document.getElementById("secondaryBtn");
  function updateColors(e) {
    const bounds = card.getBoundingClientRect();
    const x = (e.clientX - bounds.left) / bounds.width;
    const y = (e.clientY - bounds.top) / bounds.height;
    const hue1 = Math.floor(x * 360);
    const hue2 = Math.floor(y * 360);
    const color1 = `hsl(${hue1}, 70%, 60%)`;
    const color2 = `hsl(${hue2}, 70%, 60%)`;
    card.style.background = `linear-gradient(45deg, ${color1}, ${color2})`;
    // Update buttons with responsive classes
    primaryBtn.className =
      "w-full px-4 py-2 bg-white rounded-lg md:w-auto transition-all duration-300 text-base-800 hover:bg-base-100";
    secondaryBtn.className =
      "w-full px-4 py-2 text-white border border-white rounded-lg md:w-auto transition-all duration-300 hover:bg-white hover:text-base-800";
    cardTitle.className =
      "mb-2 text-2xl font-bold text-white transition-colors duration-300";
    cardText.className = "text-white transition-colors duration-300";
    coordinates.textContent = `X: ${Math.round(x * 100)}% Y: ${Math.round(y * 100)}%`;
  }
  function resetStyles() {
    // Reset with responsive classes
    primaryBtn.className =
      "w-full px-4 py-2 text-white rounded-lg md:w-auto transition-all duration-300 bg-accent-500 hover:bg-accent-600";
    secondaryBtn.className =
      "w-full px-4 py-2 border rounded-lg md:w-auto transition-all duration-300 border-accent-500 text-accent-500 hover:bg-accent-500 hover:text-white";
    card.style.background = "white";
    cardTitle.className =
      "mb-2 text-2xl font-bold transition-colors duration-300 text-base-800";
    cardText.className = "transition-colors duration-300 text-base-600";
  }
  card.addEventListener("mousemove", updateColors);
  card.addEventListener("mouseleave", resetStyles);
</script>

---
import BaseLayout from "@/layouts/BaseLayout.astro";
---

<BaseLayout>
  <section>
    <div class="px-8 md:px-12 lg:px-24 max-w-7xl mx-auto">

      <div class="flex items-center justify-center min-h-svh w-full">
        <div
          id="colorCard"
          class="relative w-full max-w-md overflow-hidden rounded-xl shadow-lg transition-all duration-300 bg-white hover:scale-105">
          <div class="p-6">
            <h2
              id="cardTitle"
              class="text-2xl font-bold mb-2 text-gray-800 transition-colors duration-300">
              Interactive color card
            </h2>
            <p
              id="cardText"
              class="text-gray-500 transition-colors duration-300 text-balance">
              Move your mouse around to see the magic happen! The colors will
              shift based on your cursor position.
              <br />
              <br />
              <span
                class="font-semibold"
                id="coordinates"
                >X: 0% Y: 0%</span
              >
            </p>
           
            <div class="mt-4 flex flex-col md:flex-row gap-2">
              <button
                id="primaryBtn"
                class="w-full md:w-auto px-4 py-2 h-10 rounded-lg transition-all duration-300 bg-blue-500 text-white hover:bg-blue-600">
                Primary
              </button>
              <button
                id="secondaryBtn"
                class="w-full md:w-auto px-4 h-10 py-2 rounded-lg border transition-all duration-300 border-blue-500 text-blue-500 hover:bg-blue-500 hover:text-white">
                Secodnary
              </button>
            </div>
          </div>
        </div>
      </div>
    </div>
    <!-- Starts links to tutorial -->
    <div
      class="pointer-events-none fixed inset-x-0 bottom-0 sm:flex sm:justify-center p-2">
      <div
        class="pointer-events-auto flex w-full max-w-md divide-x divide-neutral-200 rounded-lg bg-white shadow-xl border border-neutral-200">
        <div class="flex w-0 flex-1 items-center p-4">
          <div class="w-full">
            <p class="text-sm font-medium text-neutral-900">Tutorial</p>
            <p class="mt-1 text-sm text-neutral-500">
              How to Create an interactive color-shifting hover card with
              Tailwind CSS and JavaScript
            </p>
            <p class="mt-2 text-xs text-orange-500 underline">
              <a href="https://lexingtonthemes.com"> by Â© Lexington Themes</a>
            </p>
          </div>
        </div>
        <div class="flex">
          <div class="flex flex-col divide-y divide-neutral-200">
            <div class="flex h-0 flex-1">
              <a
                href="https://lexingtonthemes.com/tutorials/how-to-create-an-interactive-color-shifting-hover-card-with-tailwind-css-and-alpinejs"
                type="button"
                class="flex w-full items-center justify-center rounded-none rounded-tr-lg px-4 py-3 text-sm font-medium text-orange-600 hover:text-orange-500 focus:z-10 focus:outline-none focus:ring-2 focus:ring-orange-500"
                >Tutorial</a
              >
            </div>
            <div class="flex h-0 flex-1">
              <a
                href="https://github.com/Lexington-Themes/lexington-tutorials/blob/main/src/pages/js-color-shifting-card/index.astro"
                class="flex w-full items-center justify-center rounded-none rounded-br-lg px-4 py-3 text-sm font-medium text-neutral-700 hover:text-neutral-500 focus:outline-none focus:ring-2 focus:ring-orange-500"
                >Get the code</a
              >
            </div>
          </div>
        </div>
      </div>
    </div>
    <!-- Ends links to tutorial -->
  </section>
</BaseLayout>
<script type="module">
  const card = document.getElementById("colorCard");
  const cardTitle = document.getElementById("cardTitle");
  const cardText = document.getElementById("cardText");
  const coordinates = document.getElementById("coordinates");
  const primaryBtn = document.getElementById("primaryBtn");
  const secondaryBtn = document.getElementById("secondaryBtn");
  function updateColors(e) {
    const bounds = card.getBoundingClientRect();
    const x = (e.clientX - bounds.left) / bounds.width;
    const y = (e.clientY - bounds.top) / bounds.height;
    const hue1 = Math.floor(x * 360);
    const hue2 = Math.floor(y * 360);
    const color1 = `hsl(${hue1}, 70%, 60%)`;
    const color2 = `hsl(${hue2}, 70%, 60%)`;
    card.style.background = `linear-gradient(45deg, ${color1}, ${color2})`;
    // Update buttons with responsive classes
    primaryBtn.className =
      "w-full md:w-auto px-4 py-2 rounded-lg transition-all duration-300 bg-white text-gray-800 hover:bg-gray-100";
    secondaryBtn.className =
      "w-full md:w-auto px-4 py-2 rounded-lg border transition-all duration-300 border-white text-white hover:bg-white hover:text-gray-800";
    cardTitle.className =
      "text-2xl font-bold mb-2 transition-colors duration-300 text-white";
    cardText.className = "transition-colors duration-300 text-white";
    coordinates.textContent = `X: ${Math.round(x * 100)}% Y: ${Math.round(y * 100)}%`;
  }
  function resetStyles() {
    // Reset with responsive classes
    primaryBtn.className =
      "w-full md:w-auto px-4 py-2 rounded-lg transition-all duration-300 bg-blue-500 text-white hover:bg-blue-600";
    secondaryBtn.className =
      "w-full md:w-auto px-4 py-2 rounded-lg border transition-all duration-300 border-blue-500 text-blue-500 hover:bg-blue-500 hover:text-white";
    card.style.background = "white";
    cardTitle.className =
      "text-2xl font-bold mb-2 transition-colors duration-300 text-gray-800";
    cardText.className = "transition-colors duration-300 text-gray-600";
  }
  card.addEventListener("mousemove", updateColors);
  card.addEventListener("mouseleave", resetStyles);
</script>

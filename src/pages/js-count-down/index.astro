---
import BaseLayout from "@/layouts/BaseLayout.astro";
import Wrapper from "@/components/fundations/containers/Wrapper.astro";
import TutorialBanner from "@/components/global/TutorialBanner.astro";
import {
  generateArticleSchema,
  generateBreadcrumbSchema,
  generateHowToSchema,
} from "@/utils/jsonLd";

// SEO Configuration
const seoConfig = {
  title: "How to Create Js Count Down with JavaScript and Tailwind CSS",
  description: "Learn to build js count down components using JavaScript and Tailwind CSS. Includes responsive design and modern styling.",
  canonical: "/js-count-down",
  jsonLd: [
    generateArticleSchema({
      title: "How to Create Js Count Down with JavaScript and Tailwind CSS",
      description: "Learn to build js count down components using JavaScript and Tailwind CSS. Includes responsive design and modern styling.",
      url: "/js-count-down",
      datePublished: "2025-10-01T06:22:29.076Z",
      dateModified: "2025-10-01T06:22:29.076Z",
      keywords: ["Tailwind CSS","JavaScript","Vanilla JS","Js Count Down","Tutorial","Web Development"],
    }),
    generateBreadcrumbSchema([
      { name: "Home", url: "/" },
      { name: "How to Create Js Count Down with JavaScript and Tailwind CSS", url: "/js-count-down" },
    ]),
    generateHowToSchema({
      name: "How to Create Js Count Down with JavaScript and Tailwind CSS",
      description: "Learn to build js count down components using JavaScript and Tailwind CSS. Includes responsive design and modern styling.",
      totalTime: "PT20M",
      steps: [
            {
                  "name": "Set up HTML structure",
                  "text": "Create the base js count down container and elements"
            },
            {
                  "name": "Add JavaScript interactivity",
                  "text": "Initialize JavaScript to handle component state and interactions"
            },
            {
                  "name": "Style with Tailwind CSS",
                  "text": "Apply utility classes for responsive layout and modern design"
            },
            {
                  "name": "Add accessibility features",
                  "text": "Implement ARIA attributes and keyboard navigation"
            },
            {
                  "name": "Test the component",
                  "text": "Verify functionality across different browsers and devices"
            }
      ],
    }),
  ],
};
---

<BaseLayout seo={seoConfig}>
  <section>
  <h1 class="sr-only">How to Create Js Count Down with JavaScript and Tailwind CSS</h1>

    <!-- Starts links to tutorial -->
    <TutorialBanner
      tutorialUrl="https://lexingtonthemes.com/tutorials/how-to-create-a-countdown-with-tailwind-css-and-javascript"
      codeUrl="https://github.com/Lexington-Themes/lexington-tutorials/blob/main/src/pages/js-count-down/index.astro"
    />
    <!--  Starts component -->

    <Wrapper class="py-24 lg:py-48">
      <!-- Starts component -->
      <div id="countdown" class="flex justify-center space-x-8"></div>
      <!-- Ends component -->
    </Wrapper>
  </section>

  <script type="module">
    document.addEventListener("DOMContentLoaded", () => {
      const countdownContainer = document.getElementById("countdown");
      const endDate = new Date("2040-12-31T23:59:59").getTime();

      function formatTime(time) {
        const days = Math.floor(time / (1000 * 60 * 60 * 24));
        const hours = Math.floor(
          (time % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60)
        );
        const minutes = Math.floor((time % (1000 * 60 * 60)) / (1000 * 60));
        const seconds = Math.floor((time % (1000 * 60)) / 1000);
        return { days, hours, minutes, seconds };
      }

      function createCountdownElement(value, label) {
        return `
          <div class="text-center countdown-item ">
            <div class="text-xl font-medium countdown-value text-base-500">${value}</div>
            <div class="text-sm countdown-label text-accent-500">${label}</div>
          </div>
        `;
      }

      function updateCountdown() {
        const now = new Date().getTime();
        const remainingTime = Math.max(0, endDate - now);
        const { days, hours, minutes, seconds } = formatTime(remainingTime);

        countdownContainer.innerHTML =
          remainingTime > 0
            ? createCountdownElement(days, "Days") +
              createCountdownElement(hours, "Hours") +
              createCountdownElement(minutes, "Minutes") +
              createCountdownElement(seconds, "Seconds")
            : `<div class="text-center"><div class="text-xl font-bold">Countdown has ended!</div></div>`;
      }

      setInterval(updateCountdown, 1000);
    });
  </script>
</BaseLayout>

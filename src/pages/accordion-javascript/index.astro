---
import BaseLayout from "@/layouts/BaseLayout.astro";
import Wrapper from "@/components/fundations/containers/Wrapper.astro";
import TutorialBanner from "@/components/global/TutorialBanner.astro";
import {
  generateArticleSchema,
  generateBreadcrumbSchema,
  generateHowToSchema,
} from "@/utils/jsonLd";

// SEO Configuration
const seoConfig = {
  title: "How to Create an Accordion with JavaScript and Tailwind CSS",
  description: "Learn to build accordion components using JavaScript and Tailwind CSS. Includes smooth animations and accessible markup.",
  canonical: "/accordion-javascript",
  jsonLd: [
    generateArticleSchema({
      title: "How to Create an Accordion with JavaScript and Tailwind CSS",
      description: "Learn to build accordion components using JavaScript and Tailwind CSS. Includes smooth animations and accessible markup.",
      url: "/accordion-javascript",
      datePublished: "2025-10-01T06:22:29.061Z",
      dateModified: "2025-10-01T06:22:29.061Z",
      keywords: ["Tailwind CSS","JavaScript","Vanilla JS","Accordion","Tutorial","Web Development"],
    }),
    generateBreadcrumbSchema([
      { name: "Home", url: "/" },
      { name: "How to Create an Accordion with JavaScript and Tailwind CSS", url: "/accordion-javascript" },
    ]),
    generateHowToSchema({
      name: "How to Create an Accordion with JavaScript and Tailwind CSS",
      description: "Learn to build accordion components using JavaScript and Tailwind CSS. Includes smooth animations and accessible markup.",
      totalTime: "PT15M",
      steps: [
            {
                  "name": "Set up HTML structure",
                  "text": "Create the base accordion container and elements"
            },
            {
                  "name": "Add JavaScript interactivity",
                  "text": "Initialize JavaScript to handle component state and interactions"
            },
            {
                  "name": "Style with Tailwind CSS",
                  "text": "Apply utility classes for responsive layout and modern design"
            },
            {
                  "name": "Add accessibility features",
                  "text": "Implement ARIA attributes and keyboard navigation"
            },
            {
                  "name": "Test the component",
                  "text": "Verify functionality across different browsers and devices"
            }
      ],
    }),
  ],
};
---

<BaseLayout seo={seoConfig}>
  <section>
  <h1 class="sr-only">How to Create an Accordion with JavaScript and Tailwind CSS</h1>

    <!-- Starts links to tutorial -->
    <TutorialBanner
      tutorialUrl="https://lexingtonthemes.com/tutorials/how-to-create-an-accordion-with-tailwind-css-and-javascript"
      codeUrl="https://github.com/Lexington-Themes/lexington-tutorials/blob/main/src/pages/accordion-javascript/index.astro"
    />
    <Wrapper class="py-24 lg:py-62">
      <!-- Starts component -->
      <div
        id="accordion"
        class="max-w-md mx-auto overflow-hidden divide-y divide-base-200"
      >
        <!-- Accordion Item 1 -->
        <div>
          <button
            id="accordionBtn1"
            class="flex items-center justify-between w-full py-4 accordion-btn focus:outline-none text-base-500 focus:text-accent-500"
          >
            <span class="text-sm">What time is it?</span>
            <svg
              xmlns="http://www.w3.org/2000/svg"
              fill="none"
              viewBox="0 0 24 24"
              stroke-width="1.5"
              stroke="currentColor"
              class="accordion-icon size-4 transform transition-transform"
              id="accordionIcon1"
            >
              <path
                stroke-linecap="round"
                stroke-linejoin="round"
                d="M12 4.5v15m7.5-7.5h-15"></path>
            </svg>
          </button>
          <div
            id="accordionContent1"
            class="hidden py-4 text-xs border-t accordion-content border-base-200 text-base-500"
          >
            I don't know what time it is.
          </div>
        </div>
        <!-- Accordion Item 2 -->
        <div>
          <button
            id="accordionBtn2"
            class="flex items-center justify-between w-full py-4 accordion-btn focus:outline-none text-base-500 focus:text-accent-500"
          >
            <span class="text-sm">Why not?</span>
            <svg
              xmlns="http://www.w3.org/2000/svg"
              fill="none"
              viewBox="0 0 24 24"
              stroke-width="1.5"
              stroke="currentColor"
              class="accordion-icon size-4 transform transition-transform"
              id="accordionIcon2"
            >
              <path
                stroke-linecap="round"
                stroke-linejoin="round"
                d="M12 4.5v15m7.5-7.5h-15"></path>
            </svg>
          </button>
          <div
            id="accordionContent2"
            class="hidden py-4 text-xs border-t accordion-content text-base-500 border-base-200"
          >
            Because I have lost the notion of time.
          </div>
        </div>
      </div>
      <!--  Ends component -->
    </Wrapper>
  </section>
</BaseLayout>
<script type="module">
  document.addEventListener("DOMContentLoaded", function () {
    const accordionBtns = document.querySelectorAll(".accordion-btn");
    const accordionIcons = document.querySelectorAll(".accordion-icon");
    const accordionContents = document.querySelectorAll(".accordion-content");
    accordionBtns.forEach((btn, index) => {
      btn.addEventListener("click", () => {
        toggleAccordion(index);
      });
    });
    function toggleAccordion(index) {
      accordionIcons.forEach((icon, i) => {
        if (i === index) {
          icon.classList.toggle("rotate-45");
        } else {
          icon.classList.remove("rotate-45");
        }
      });
      accordionContents.forEach((content, i) => {
        if (i === index) {
          content.classList.toggle("hidden");
        } else {
          content.classList.add("hidden");
        }
      });
    }
  });
</script>

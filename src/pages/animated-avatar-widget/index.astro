---
// Fundations
import BaseLayout from "@/layouts/BaseLayout.astro";
import Wrapper from "@/components/fundations/containers/Wrapper.astro";
import TutorialBanner from "@/components/global/TutorialBanner.astro";
import {
  generateArticleSchema,
  generateBreadcrumbSchema,
  generateHowToSchema,
} from "@/utils/jsonLd";
// SEO Configuration
const seoConfig = {
  title: "Create Animated Avatar Widget with Tailwind CSS",
  description: "Learn to build animated avatar widget components using Tailwind CSS. Includes responsive design and modern styling.",
  canonical: "/animated-avatar-widget",
  jsonLd: [
    generateArticleSchema({
      title: "Create Animated Avatar Widget with Tailwind CSS",
      description: "Learn to build animated avatar widget components using Tailwind CSS. Includes responsive design and modern styling.",
      url: "/animated-avatar-widget",
      datePublished: "2025-10-01T06:26:58.389Z",
      dateModified: "2025-10-01T06:26:58.389Z",
      keywords: ["Tailwind CSS","Animated Avatar Widget","Tutorial","Web Development"],
    }),
    generateBreadcrumbSchema([
      { name: "Home", url: "/" },
      { name: "Create Animated Avatar Widget with Tailwind CSS", url: "/animated-avatar-widget" },
    ]),
    generateHowToSchema({
      name: "Create Animated Avatar Widget with Tailwind CSS",
      description: "Learn to build animated avatar widget components using Tailwind CSS. Includes responsive design and modern styling.",
      totalTime: "PT20M",
      steps: [
        { name: "Set up HTML structure", text: "Create the base component container and elements" },
        { name: "Add interactivity", text: "Initialize state management and event handlers" },
        { name: "Style with Tailwind CSS", text: "Apply utility classes for responsive layout" },
        { name: "Add accessibility features", text: "Implement ARIA attributes and keyboard navigation" },
        { name: "Test the component", text: "Verify functionality across browsers and devices" },
      ],
    }),
  ],
};

const avatars = [
  { id: 1, src: "/avatars/8.png", alt: "Avatar 1" },
  { id: 2, src: "/avatars/7.png", alt: "Avatar 2" },
  { id: 3, src: "/avatars/6.png", alt: "Avatar 3" },
  { id: 4, src: "/avatars/5.png", alt: "Avatar 4" },
];
---

<BaseLayout seo={seoConfig}>
  <section>
  <h1 class="sr-only">Create Animated Avatar Widget with Tailwind CSS</h1>

    <TutorialBanner
      tutorialUrl="https://lexingtonthemes.com/tutorials/how-to-create-a-animated-avatar-stack-widget-with-tailwind-css/"
      codeUrl="https://github.com/Lexington-Themes/lexington-tutorials/blob/main/src/pages/animated-avatar-widget/index.astro"
    />
    <Wrapper class="py-24 lg:py-62 flex flex-col items-center justify-center">
      <!-- Starts component -->

      <div class="flex isolate -space-x-2">
        {
          avatars.map((avatar, index) => (
            <img
              class={`relative inline-block size-24 rounded-full object-cover ring-2 ring-white transition-all duration-300 ease-in-out hover:-translate-y-3 hover:scale-110`}
              style={{ zIndex: avatars.length - index }}
              src={avatar.src}
              alt={avatar.alt}
            />
          ))
        }
      </div>
    </Wrapper>
  </section>
</BaseLayout>

---
// Astro frontmatter: JavaScript runs at build time in Astro, before the HTML is generated.
// Fundations
import BaseLayout from "@/layouts/BaseLayout.astro";
import Wrapper from "@/components/fundations/containers/Wrapper.astro";
import TutorialBanner from "@/components/global/TutorialBanner.astro"; // Importing a base layout component.
import {
  generateArticleSchema,
  generateBreadcrumbSchema,
  generateHowToSchema,
} from "@/utils/jsonLd";
// Define an array of objects, each representing a card with an image URL.
// SEO Configuration
const seoConfig = {
  title: "Create an Adaptive Navigation with Alpine.js",
  description:
    "Learn to build an adaptive navigation component using Alpine.js and Tailwind CSS. Includes scroll effects and smooth animations.",
  canonical: "/adaptable-navigation",
  jsonLd: [
    generateArticleSchema({
      title: "Create an Adaptive Navigation with Alpine.js",
      description:
        "Learn to build an adaptive navigation component using Alpine.js and Tailwind CSS. Includes scroll effects and smooth animations.",
      url: "/adaptable-navigation",
      datePublished: "2025-10-01T06:26:58.386Z",
      dateModified: "2025-10-01T06:26:58.386Z",
      keywords: [
        "Alpine.js",
        "Navigation",
        "Scroll Effects",
        "Tailwind CSS",
        "Tutorial",
      ],
    }),
    generateBreadcrumbSchema([
      { name: "Home", url: "/" },
      {
        name: "Create an Adaptive Navigation with Alpine.js",
        url: "/adaptable-navigation",
      },
    ]),
    generateHowToSchema({
      name: "Create an Adaptive Navigation with Alpine.js",
      description:
        "Learn to build an adaptive navigation component using Alpine.js and Tailwind CSS. Includes scroll effects and smooth animations.",
      totalTime: "PT20M",
      steps: [
        {
          name: "Set up HTML structure",
          text: "Create the base component container and elements",
        },
        {
          name: "Add interactivity",
          text: "Initialize state management and event handlers",
        },
        {
          name: "Style with Tailwind CSS",
          text: "Apply utility classes for responsive layout",
        },
        {
          name: "Add accessibility features",
          text: "Implement ARIA attributes and keyboard navigation",
        },
        {
          name: "Test the component",
          text: "Verify functionality across browsers and devices",
        },
      ],
    }),
  ],
};

const cards = [
  {
    href: "#_",
    imageUrl:
      "https://i.pinimg.com/564x/eb/b3/bd/ebb3bd6c322463cee8b7b17659792830.jpg",
  },
  {
    href: "#_",
    imageUrl:
      "https://i.pinimg.com/564x/9b/0e/e1/9b0ee1146eba537b5b1e207928350e0f.jpg",
  },
  {
    href: "#_",
    imageUrl:
      "https://i.pinimg.com/564x/b6/91/52/b691526e863a332d1708eb1d9da0d403.jpg",
  },
];
---

<BaseLayout seo={seoConfig}>
  <section x-data="{ atTop: true }">
  <h1 class="sr-only">Create an Adaptive Navigation with Alpine.js</h1>

    <TutorialBanner
      tutorialUrl="https://lexingtonthemes.com/tutorials/how-to-create-an-animated-navigation-with-alpine-js"
      codeUrl="https://github.com/Lexington-Themes/lexington-tutorials/blob/main/src/pages/adaptable-navigation/index.astro"
    />
    <div
      class="fixed inset-x-0 z-50 w-full max-w-2xl px-8 py-4 mx-auto bg-black rounded-full transition-all duration-1000 top-20 ease-in-out transform"
      :class="{ 'bg-black bg-opacity-90 backdrop-blur-xl max-w-4xl ': !atTop, 'max-w-2xl bg-white': atTop }"
      @scroll.window="atTop = (window.pageYOffset > 50 ? false : true)"
    >
      <div
        x-data="{ open: false }"
        class="flex flex-col w-full p-2 mx-auto md:items-center md:justify-between md:flex-row"
      >
        <div class="flex flex-row items-center justify-between">
          <span
            class="font-bold tracking-tighter text-black uppercase"
            :class="{ 'text-black': atTop, 'text-white': !atTop }"
          >
            âœº Lexington
          </span>
          <button class="md:hidden focus:outline-none"> </button>
        </div>
        <nav
          :class="{'flex': open, 'hidden': !open}"
          class="flex-col justify-end flex-grow hidden pb-4 gap-8 md:pb-0 md:flex md:flex-row lg:ml-auto"
        >
          <a :class="{ 'text-black': atTop, 'text-white': !atTop }" href="#_"
            >About</a
          >
          <a :class="{ 'text-black': atTop, 'text-white': !atTop }" href="#_"
            >Work</a
          >
          <a :class="{ 'text-black': atTop, 'text-white': !atTop }" href="#_"
            >Blog</a
          >
        </nav>
      </div>
    </div>

    <Wrapper class="py-24">
      <div
        class="max-w-2xl mx-auto grid grid-cols-1 gap-8 gap-y-28 sm:grid-cols-1"
      >
        {
          cards.map((card) => (
            <a href={card.href}>
              <div>
                <img
                  class="w-full shadow duration-500 rounded-3xl hover:shadow-3xl hover:-translate-y-12"
                  src={card.imageUrl}
                />
              </div>
            </a>
          ))
        }
      </div>
    </Wrapper>
  </section>
</BaseLayout>

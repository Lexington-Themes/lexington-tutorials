---
import BaseLayout from "@/layouts/BaseLayout.astro";
import Wrapper from "@/components/fundations/containers/Wrapper.astro";
import TutorialBanner from "@/components/global/TutorialBanner.astro";
import {
  generateArticleSchema,
  generateBreadcrumbSchema,
  generateHowToSchema,
} from "@/utils/jsonLd";

// SEO Configuration
const seoConfig = {
  title: "How to Create Js Chatbubble with JavaScript and Tailwind CSS",
  description:
    "Learn to build js chatbubble components using JavaScript and Tailwind CSS. Includes responsive design and modern styling.",
  canonical: "/js-chatbubble",
  jsonLd: [
    generateArticleSchema({
      title: "How to Create Js Chatbubble with JavaScript and Tailwind CSS",
      description:
        "Learn to build js chatbubble components using JavaScript and Tailwind CSS. Includes responsive design and modern styling.",
      url: "/js-chatbubble",
      datePublished: "2025-10-01T06:22:29.075Z",
      dateModified: "2025-10-01T06:22:29.075Z",
      keywords: [
        "Tailwind CSS",
        "JavaScript",
        "Vanilla JS",
        "Js Chatbubble",
        "Tutorial",
        "Web Development",
      ],
    }),
    generateBreadcrumbSchema([
      { name: "Home", url: "/" },
      {
        name: "How to Create Js Chatbubble with JavaScript and Tailwind CSS",
        url: "/js-chatbubble",
      },
    ]),
    generateHowToSchema({
      name: "How to Create Js Chatbubble with JavaScript and Tailwind CSS",
      description:
        "Learn to build js chatbubble components using JavaScript and Tailwind CSS. Includes responsive design and modern styling.",
      totalTime: "PT20M",
      steps: [
        {
          name: "Set up HTML structure",
          text: "Create the base js chatbubble container and elements",
        },
        {
          name: "Add JavaScript interactivity",
          text: "Initialize JavaScript to handle component state and interactions",
        },
        {
          name: "Style with Tailwind CSS",
          text: "Apply utility classes for responsive layout and modern design",
        },
        {
          name: "Add accessibility features",
          text: "Implement ARIA attributes and keyboard navigation",
        },
        {
          name: "Test the component",
          text: "Verify functionality across different browsers and devices",
        },
      ],
    }),
  ],
};
---

<BaseLayout seo={seoConfig}>
  <h1 class="sr-only">
    How to Create Js Chatbubble with JavaScript and Tailwind CSS
  </h1>
  <!-- Starts links to tutorial -->
  <TutorialBanner
    tutorialUrl="https://lexingtonthemes.com/tutorials/how-to-create-a-chat-bubble-with-tailwind-css-and-javascript"
    codeUrl="https://github.com/Lexington-Themes/lexington-tutorials/blob/main/src/pages/jschatbubble/index.astro"
  />
  <!--  Starts component -->
  <div id="app">
    <div
      id="modal"
      class="hidden fixed flex-col z-50 bottom-[100px] top-0 ring-0 left-0 sm:top-auto sm:right-5 sm:left-auto h-[calc(100%-95px)] w-full sm:w-[350px] overflow-auto min-h-[250px] sm:h-[600px] bg-white shadow-2xl rounded-xl transition-opacity duration-200 ease transform"
    >
      <div
        class="flex flex-col items-center justify-center h-32 p-5 lg:py-20 bg-gradient-to-t from-base-200 to-base-100"
      >
        <div>
          <div class="flex py-2 -space-x-2">
            <img
              class="inline-block rounded-full size-8 ring-2 ring-white"
              src="https://images.unsplash.com/photo-1491528323818-fdd1faba62cc?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=facearea&facepad=2&w=256&h=256&q=80"
              alt="#"
            />
            <img
              class="inline-block rounded-full size-8 ring-2 ring-white"
              src="https://images.unsplash.com/photo-1550525811-e5869dd03032?ixlib=rb-1.2.1&auto=format&fit=facearea&facepad=2&w=256&h=256&q=80"
              alt="#"
            />
            <img
              class="inline-block rounded-full size-8 ring-2 ring-white"
              src="https://images.unsplash.com/photo-1500648767791-00dcc994a43e?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=facearea&facepad=2.25&w=256&h=256&q=80"
              alt="#"
            />
            <img
              class="inline-block rounded-full size-8 ring-2 ring-white"
              src="https://images.unsplash.com/photo-1472099645785-5658abf4ff4e?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=facearea&facepad=2&w=256&h=256&q=80"
              alt="#"
            />
          </div>
        </div>
        <h3 class="text-black">Got any questions?</h3>
        <p class="mt-2 text-sm text-base-500">
          Typically replies under 47 minutes
        </p>
      </div>
      <div
        class="flex flex-col justify-between h-full p-6 bg-white rounded-t-3xl"
      >
        <div class="flex w-full max-w-xs mt-2 space-x-3">
          <img
            class="flex-shrink-0 rounded-full size-10 bg-base-300"
            src="https://images.unsplash.com/photo-1491528323818-fdd1faba62cc?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=facearea&facepad=2&w=256&h=256&q=80"
            alt=""
          />
          <div>
            <div class="p-3 rounded-r-lg rounded-bl-lg bg-accent-500">
              <p class="text-sm text-white">
                Hey, How are can we help you? We recommend to checkout our
                documentation and get started, we don't really know much
                anyways.
              </p>
            </div>
            <span class="text-xs leading-none text-base-500">2 min ago</span>
          </div>
        </div>
        <div class="mt-4 border-t">
          <input
            class="flex items-center w-full px-3 text-sm border-0 h-14 rounded-xl"
            type="text"
            placeholder="Type your messageâ€¦"
          />
        </div>
      </div>
    </div>
    <Wrapper class="flex flex-col items-center justify-end py-24 lg:py-62">
      <button
        id="toggleButton"
        class="flex items-center justify-center rounded-full shadow-lg size-14 bg-accent-600 focus:outline-none hover:bg-accent-600 focus:bg-accent-600 transition duration-300 ease"
      >
        <svg
          id="openIcon"
          class="absolute w-6 h-6 text-white"
          xmlns="http://www.w3.org/2000/svg"
          fill="none"
          viewBox="0 0 24 24"
          stroke-width="1.5"
          stroke="currentColor"
        >
          <path
            stroke-linecap="round"
            stroke-linejoin="round"
            d="M8.625 9.75a.375.375 0 11-.75 0 .375.375 0 01.75 0zm0 0H8.25m4.125 0a.375.375 0 11-.75 0 .375.375 0 01.75 0zm0 0H12m4.125 0a.375.375 0 11-.75 0 .375.375 0 01.75 0zm0 0h-.375m-13.5 3.01c0 1.6 1.123 2.994 2.707 3.227 1.087.16 2.185.283 3.293.369V21l4.184-4.183a1.14 1.14 0 01.778-.332 48.294 48.294 0 005.83-.498c1.585-.233 2.708-1.626 2.708-3.228V6.741c0-1.602-1.123-2.995-2.707-3.228A48.394 48.394 0 0012 3c-2.392 0-4.744.175-7.043.513C3.373 3.746 2.25 5.14 2.25 6.741v6.018z"
          ></path>
        </svg>
        <svg
          id="closeIcon"
          class="absolute hidden w-6 h-6 text-white"
          xmlns="http://www.w3.org/2000/svg"
          fill="none"
          viewBox="0 0 24 24"
          stroke="currentColor"
          stroke-width="2"
          stroke-linecap="round"
          stroke-linejoin="round"
        >
          <line x1="18" y1="6" x2="6" y2="18"></line>
          <line x1="6" y1="6" x2="18" y2="18"></line>
        </svg>
      </button>
    </Wrapper>
  </div>
</BaseLayout>
<script type="module">
  document.addEventListener("DOMContentLoaded", function () {
    var modal = document.getElementById("modal");
    var toggleButton = document.getElementById("toggleButton");
    var openIcon = document.getElementById("openIcon");
    var closeIcon = document.getElementById("closeIcon");

    toggleButton.addEventListener("click", function () {
      var isHidden = modal.classList.contains("hidden");

      if (isHidden) {
        modal.classList.remove("hidden");
        modal.classList.add("flex");
        setTimeout(function () {
          modal.classList.remove("opacity-0", "translate-y-5");
        }, 10); // timeout for transition effect
        openIcon.classList.add("hidden");
        closeIcon.classList.remove("hidden");
      } else {
        modal.classList.add("opacity-0", "translate-y-5");
        setTimeout(function () {
          modal.classList.add("hidden");
          modal.classList.remove("flex");
        }, 200); // match transition duration
        openIcon.classList.remove("hidden");
        closeIcon.classList.add("hidden");
      }
    });

    document.addEventListener("click", function (event) {
      if (
        !modal.contains(event.target) &&
        !toggleButton.contains(event.target)
      ) {
        modal.classList.add("opacity-0", "translate-y-5");
        setTimeout(function () {
          modal.classList.add("hidden");
          modal.classList.remove("flex");
        }, 200);
        openIcon.classList.remove("hidden");
        closeIcon.classList.add("hidden");
      }
    });
  });
</script>

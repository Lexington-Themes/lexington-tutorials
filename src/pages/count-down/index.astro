---
import BaseLayout from "@/layouts/BaseLayout.astro";
import Wrapper from "@/components/fundations/containers/Wrapper.astro";
import TutorialBanner from "@/components/global/TutorialBanner.astro";
import {
  generateArticleSchema,
  generateBreadcrumbSchema,
  generateHowToSchema,
} from "@/utils/jsonLd";

// SEO Configuration
const seoConfig = {
  title: "How to Create Count Down with Alpine.js and Tailwind CSS",
  description: "Learn to build count down components using Alpine.js and Tailwind CSS. Includes responsive design and modern styling.",
  canonical: "/count-down",
  jsonLd: [
    generateArticleSchema({
      title: "How to Create Count Down with Alpine.js and Tailwind CSS",
      description: "Learn to build count down components using Alpine.js and Tailwind CSS. Includes responsive design and modern styling.",
      url: "/count-down",
      datePublished: "2025-10-01T06:22:29.070Z",
      dateModified: "2025-10-01T06:22:29.070Z",
      keywords: ["Tailwind CSS","Alpine.js","Count Down","Tutorial","Web Development"],
    }),
    generateBreadcrumbSchema([
      { name: "Home", url: "/" },
      { name: "How to Create Count Down with Alpine.js and Tailwind CSS", url: "/count-down" },
    ]),
    generateHowToSchema({
      name: "How to Create Count Down with Alpine.js and Tailwind CSS",
      description: "Learn to build count down components using Alpine.js and Tailwind CSS. Includes responsive design and modern styling.",
      totalTime: "PT20M",
      steps: [
            {
                  "name": "Set up HTML structure",
                  "text": "Create the base count down container and elements"
            },
            {
                  "name": "Add Alpine.js interactivity",
                  "text": "Initialize Alpine.js to handle component state and interactions"
            },
            {
                  "name": "Style with Tailwind CSS",
                  "text": "Apply utility classes for responsive layout and modern design"
            },
            {
                  "name": "Add accessibility features",
                  "text": "Implement ARIA attributes and keyboard navigation"
            },
            {
                  "name": "Test the component",
                  "text": "Verify functionality across different browsers and devices"
            }
      ],
    }),
  ],
};
---

<BaseLayout seo={seoConfig}>
  <section>
  <h1 class="sr-only">How to Create Count Down with Alpine.js and Tailwind CSS</h1>

    <TutorialBanner
      tutorialUrl="https://lexingtonthemes.com/tutorials/how-to-create-a-countdown-with-tailwind-css-and-alpinejs"
      codeUrl="https://github.com/Lexington-Themes/lexington-tutorials/blob/main/src/pages/count-down/index.astro"
    />
    <Wrapper class="py-24 lg:py-62">
      <!-- Starts compoent -->
      <div
        class="justify-center mx-auto w-fit"
        x-data="{
endDate: new Date('2040-12-31T23:59:59').getTime(),
remainingTime: 0,
formatTime(time) {
const days = Math.floor(time / (1000 * 60 * 60 * 24));
const hours = Math.floor((time % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));
const minutes = Math.floor((time % (1000 * 60 * 60)) / (1000 * 60));
const seconds = Math.floor((time % (1000 * 60)) / 1000);
return { days, hours, minutes, seconds };
}
}"
        x-init="() => {
setInterval(() => {
const now = new Date().getTime();
const remainingTime = endDate - now;
$data.remainingTime = remainingTime > 0 ? remainingTime : 0;
}, 1000);
}"
      >
        <template x-if="remainingTime > 0">
          <div class="flex justify-between w-full mx-auto text-center gap-8">
            <div w-full>
              <div
                class="text-xl font-medium text-base-500"
                x-text="formatTime(remainingTime).days"
              >
              </div>
              <div class="text-sm text-accent-500">Days</div>
            </div>
            <div w-full>
              <div
                class="text-xl font-medium text-base-500"
                x-text="formatTime(remainingTime).hours"
              >
              </div>
              <div class="text-sm text-accent-500">Hours</div>
            </div>
            <div w-full>
              <div
                class="text-xl font-medium text-base-500"
                x-text="formatTime(remainingTime).minutes"
              >
              </div>
              <div class="text-sm text-accent-500">Minutes</div>
            </div>
            <div w-full>
              <div
                class="text-xl font-medium text-base-500"
                x-text="formatTime(remainingTime).seconds"
              >
              </div>
              <div class="text-sm text-accent-500">Seconds</div>
            </div>
          </div>
        </template>
        <template x-if="remainingTime <= 0">
          <div class="text-center">
            <div class="text-xl font-bold">Countdown has ended!</div>
          </div>
        </template>
      </div>
    </Wrapper>
  </section>
</BaseLayout>

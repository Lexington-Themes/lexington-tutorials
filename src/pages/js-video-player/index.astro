---
// Fundations
import BaseLayout from "@/layouts/BaseLayout.astro";
import Wrapper from "@/components/fundations/containers/Wrapper.astro";
import TutorialBanner from "@/components/global/TutorialBanner.astro";
---

<BaseLayout>
  <section>
    <!-- Starts links to tutorial -->
    <TutorialBanner
      tutorialUrl="https://lexingtonthemes.com/tutorials/how-to-create-custom-video-player-with-tailwind-css-and-javascript/"
      codeUrl="https://github.com/Lexington-Themes/lexington-tutorials/blob/main/src/pages/js-video-player/index.astro"
    />
    <Wrapper class="py-24">
      <!-- Starts component -->

      <div
        class="w-full max-w-3xl mx-auto mt-12 overflow-hidden bg-white rounded-2xl"
      >
        <div class="relative aspect-video">
          <video
            id="video"
            class="w-full"
            src="https://vantaa.lexingtonthemes.com/videos/intro2.mp4"></video>
          <div
            id="controls"
            class="absolute bottom-0 left-0 right-0 p-4 text-white bg-zinc-950"
          >
            <div class="flex items-center justify-between">
              <button id="playPauseBtn" class="focus:outline-none">
                <svg
                  class="w-6 h-6"
                  fill="none"
                  stroke="currentColor"
                  viewBox="0 0 24 24"
                  xmlns="http://www.w3.org/2000/svg"
                >
                  <path
                    stroke-linecap="round"
                    stroke-linejoin="round"
                    stroke-width="2"
                    d="M14.752 11.168l-3.197-2.132A1 1 0 0010 9.87v4.263a1 1 0 001.555.832l3.197-2.132a1 1 0 000-1.664z"
                  ></path>
                  <path
                    stroke-linecap="round"
                    stroke-linejoin="round"
                    stroke-width="2"
                    d="M21 12a9 9 0 11-18 0 9 9 0 0118 0z"></path>
                </svg>
              </button>
              <div class="flex-grow mx-4">
                <input
                  type="range"
                  id="progressBar"
                  class="w-full"
                  min="0"
                  max="100"
                  value="0"
                />
              </div>
              <div id="time" class="text-sm">0:00 / 0:00</div>
            </div>
          </div>
        </div>
      </div>

      <!-- Ends component -->
    </Wrapper>

    <!-- Ends links to tutorial -->
  </section>
</BaseLayout>
<script type="module">
  const video = document.getElementById("video");
  const playPauseBtn = document.getElementById("playPauseBtn");
  const progressBar = document.getElementById("progressBar");
  const timeDisplay = document.getElementById("time");

  playPauseBtn.addEventListener("click", togglePlayPause);
  video.addEventListener("timeupdate", updateProgress);
  progressBar.addEventListener("change", setVideoProgress);

  function togglePlayPause() {
    if (video.paused) {
      video.play();
      playPauseBtn.innerHTML = `
                    <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 9v6m4-6v6m7-3a9 9 0 11-18 0 9 9 0 0118 0z"></path>
                    </svg>
                `;
    } else {
      video.pause();
      playPauseBtn.innerHTML = `
                    <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M14.752 11.168l-3.197-2.132A1 1 0 0010 9.87v4.263a1 1 0 001.555.832l3.197-2.132a1 1 0 000-1.664z"></path>
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 12a9 9 0 11-18 0 9 9 0 0118 0z"></path>
                    </svg>
                `;
    }
  }

  function updateProgress() {
    const progress = (video.currentTime / video.duration) * 100;
    progressBar.value = progress;

    const currentMinutes = Math.floor(video.currentTime / 60);
    const currentSeconds = Math.floor(video.currentTime % 60);
    const durationMinutes = Math.floor(video.duration / 60);
    const durationSeconds = Math.floor(video.duration % 60);

    timeDisplay.textContent = `${currentMinutes}:${currentSeconds.toString().padStart(2, "0")} / ${durationMinutes}:${durationSeconds.toString().padStart(2, "0")}`;
  }

  function setVideoProgress() {
    const time = (progressBar.value * video.duration) / 100;
    video.currentTime = time;
  }
</script>

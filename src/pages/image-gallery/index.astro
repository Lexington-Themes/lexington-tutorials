---
import BaseLayout from "@/layouts/BaseLayout.astro";
import Wrapper from "@/components/fundations/containers/Wrapper.astro";
import TutorialBanner from "@/components/global/TutorialBanner.astro";
import {
  generateArticleSchema,
  generateBreadcrumbSchema,
  generateHowToSchema,
} from "@/utils/jsonLd";

// SEO Configuration
const seoConfig = {
  title: "Create an Image Gallery with Alpine.js",
  description: "Learn to build gallery components using Alpine.js and Tailwind CSS. Includes responsive grid and lightbox.",
  canonical: "/image-gallery",
  jsonLd: [
    generateArticleSchema({
      title: "Create an Image Gallery with Alpine.js",
      description: "Learn to build gallery components using Alpine.js and Tailwind CSS. Includes responsive grid and lightbox.",
      url: "/image-gallery",
      datePublished: "2025-10-01T06:22:29.073Z",
      dateModified: "2025-10-01T06:22:29.073Z",
      keywords: ["Tailwind CSS","Alpine.js","Gallery","Tutorial","Web Development"],
    }),
    generateBreadcrumbSchema([
      { name: "Home", url: "/" },
      { name: "Create an Image Gallery with Alpine.js", url: "/image-gallery" },
    ]),
    generateHowToSchema({
      name: "Create an Image Gallery with Alpine.js",
      description: "Learn to build gallery components using Alpine.js and Tailwind CSS. Includes responsive grid and lightbox.",
      totalTime: "PT25M",
      steps: [
            {
                  "name": "Set up HTML structure",
                  "text": "Create the base gallery container and elements"
            },
            {
                  "name": "Add Alpine.js interactivity",
                  "text": "Initialize Alpine.js to handle component state and interactions"
            },
            {
                  "name": "Style with Tailwind CSS",
                  "text": "Apply utility classes for responsive layout and modern design"
            },
            {
                  "name": "Add accessibility features",
                  "text": "Implement ARIA attributes and keyboard navigation"
            },
            {
                  "name": "Test the component",
                  "text": "Verify functionality across different browsers and devices"
            }
      ],
    }),
  ],
};
---

<BaseLayout seo={seoConfig}>
  <section>
  <h1 class="sr-only">Create an Image Gallery with Alpine.js</h1>

    <TutorialBanner
      tutorialUrl="https://lexingtonthemes.com/tutorials/how-to-create-a-image-gallery-with-tailwind-css-and-alpinejs"
      codeUrl="https://github.com/Lexington-Themes/lexington-tutorials/blob/main/src/pages/image-gallery/index.astro"
    />
    <Wrapper class="py-24 lg:py-48">
      <!-- Starts component -->
      <div
        x-data="{ currentImage: null }"
        x-init="() => {
    window.addEventListener('keydown', (event) => {
        if (event.key === 'Escape') {
            currentImage = null;
        }
    });
}"
      >
        <div class="grid grid-cols-3 gap-4">
          <div
            x-on:click="currentImage = 'https://i.pinimg.com/564x/59/41/a0/5941a02c048f6226031a0487451c2651.jpg'"
            class="cursor-pointer"
          >
            <img
              src="https://i.pinimg.com/564x/59/41/a0/5941a02c048f6226031a0487451c2651.jpg"
              alt="Image 1"
              class="w-full h-auto aspect-[3/4] object-cover"
            />
          </div>
          <div
            x-on:click="currentImage = 'https://i.pinimg.com/736x/70/25/f6/7025f63ebdd1caa11b47889c4c4d8fcd.jpg'"
            class="cursor-pointer"
          >
            <img
              src="https://i.pinimg.com/736x/70/25/f6/7025f63ebdd1caa11b47889c4c4d8fcd.jpg"
              alt="Image 2"
              class="w-full h-auto aspect-[3/4] object-cover"
            />
          </div>
          <div
            x-on:click="currentImage = 'https://i.pinimg.com/564x/4e/a7/ff/4ea7ff230ad9f3bc1c30b1b6cbaccad3.jpg'"
            class="cursor-pointer"
          >
            <img
              src="https://i.pinimg.com/564x/4e/a7/ff/4ea7ff230ad9f3bc1c30b1b6cbaccad3.jpg"
              alt="Image 3"
              class="w-full h-auto aspect-[3/4] object-cover"
            />
          </div>
          <!-- Add more image placeholders as needed -->
        </div>

        <!-- Modal -->
        <div
          x-show="currentImage"
          class="fixed inset-0 flex items-center justify-center bg-base-200 bg-opacity-80 transition-opacity duration-300"
          role="dialog"
          aria-modal="true"
          aria-labelledby="modal-title"
        >
          <div
            @click.away="currentImage = null"
            class="max-w-full max-h-full py-12 overflow-auto"
            tabindex="-1"
            aria-labelledby="modal-title"
            aria-describedby="modal-description"
          >
            <button
              @click="currentImage = null"
              class="flex justify-center h-12 px-8 py-2 mx-auto text-sm font-semibold text-white rounded-full bg-accent-600 items-center
  hover:bg-accent-500 focus:outline-none focus:ring-2 focus:ring-accent-500 w-auto
 focus:ring-offset-2"
              >Close</button
            >
            <img
              :src="currentImage"
              alt="Full Size Image"
              class="max-w-full mx-auto mt-2 max-h-62"
            />
          </div>
        </div>
      </div>
    </Wrapper>
  </section>
</BaseLayout>

---
import BaseLayout from "@/layouts/BaseLayout.astro";
import Button from "@/components/fundations/elements/Button.astro";
import Wrapper from "@/components/fundations/containers/Wrapper.astro";
import TutorialBanner from "@/components/global/TutorialBanner.astro";
import {
  generateArticleSchema,
  generateBreadcrumbSchema,
  generateHowToSchema,
} from "@/utils/jsonLd";

// SEO Configuration
const seoConfig = {
  title: "How to Create Tooltips with Alpine.js and Tailwind CSS",
  description:
    "Learn to build tooltip components using Alpine.js and Tailwind CSS. Includes hover effects and positioning.",
  canonical: "/tooltip",
  jsonLd: [
    generateArticleSchema({
      title: "How to Create Tooltips with Alpine.js and Tailwind CSS",
      description:
        "Learn to build tooltip components using Alpine.js and Tailwind CSS. Includes hover effects and positioning.",
      url: "/tooltip",
      datePublished: "2025-10-01T06:22:29.090Z",
      dateModified: "2025-10-01T06:22:29.090Z",
      keywords: [
        "Tailwind CSS",
        "Alpine.js",
        "Tooltip",
        "Tutorial",
        "Web Development",
      ],
    }),
    generateBreadcrumbSchema([
      { name: "Home", url: "/" },
      {
        name: "How to Create Tooltips with Alpine.js and Tailwind CSS",
        url: "/tooltip",
      },
    ]),
    generateHowToSchema({
      name: "How to Create Tooltips with Alpine.js and Tailwind CSS",
      description:
        "Learn to build tooltip components using Alpine.js and Tailwind CSS. Includes hover effects and positioning.",
      totalTime: "PT10M",
      steps: [
        {
          name: "Set up HTML structure",
          text: "Create the base tooltip container and elements",
        },
        {
          name: "Add Alpine.js interactivity",
          text: "Initialize Alpine.js to handle component state and interactions",
        },
        {
          name: "Style with Tailwind CSS",
          text: "Apply utility classes for responsive layout and modern design",
        },
        {
          name: "Add accessibility features",
          text: "Implement ARIA attributes and keyboard navigation",
        },
        {
          name: "Test the component",
          text: "Verify functionality across different browsers and devices",
        },
      ],
    }),
  ],
};
---

<BaseLayout seo={seoConfig}>
  <section>
  <h1 class="sr-only">How to Create Tooltips with Alpine.js and Tailwind CSS</h1>

    <TutorialBanner
      tutorialUrl="https://lexingtonthemes.com/tutorials/how-to-create-a-tooltip-with-tailwind-css-and-alpinejs/"
      codeUrl="https://github.com/Lexington-Themes/lexington-tutorials/blob/main/src/pages/tooltip/index.astro"
    />
    <Wrapper class="py-24 lg:py-48">
      <div
        x-data="{ open: false, buttonHovered: false }"
        @mouseenter="open = true"
        @mouseleave="open = false"
        class="relative flex items-center justify-center duration-200"
      >
        <Button
          @mouseenter="buttonHovered = true"
          @mouseleave="buttonHovered = false"
          type="button"
          size="sm"
          variant="accent"
        >
          Hover over me babe
        </Button>

        <!--
        // This div is our tooltip.
        // x-show="open" means this div will only be visible when "open" is true.
        -->
        <div
          x-show="open && buttonHovered"
          class="absolute z-10 flex items-center justify-center w-56 h-20 mt-2 overflow-hidden text-center shadow-lg top-full rounded-md bg-accent-600"
          style="display: none;"
        >
          <div
            role="menu"
            aria-orientation="vertical"
            aria-labelledby="options-menu"
          >
            <a
              href="#"
              class="block px-4 py-2 mx-auto text-xl text-white"
              role="menuitem"
            >
              Hello pomelo, I am your tooltip!
            </a>
          </div>
        </div>
      </div>
    </Wrapper>
  </section>
</BaseLayout>

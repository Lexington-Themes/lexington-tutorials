---
// Fundations
import BaseLayout from "@/layouts/BaseLayout.astro";
import Wrapper from "@/components/fundations/containers/Wrapper.astro";
import TutorialBanner from "@/components/global/TutorialBanner.astro";
---

<BaseLayout>
  <section>
    <!-- Starts links to tutorial -->
    <TutorialBanner
      tutorialUrl="https://lexingtonthemes.com/tutorials/how-to-add-item-to-your-cart-with-tailwind-css-and-javascript/"
      codeUrl="https://github.com/Lexington-Themes/lexington-tutorials/blob/main/src/pages/js-cart/index.astro"
    />
    <!--  Starts component -->
    <Wrapper class="py-24 lg:py-48">
      <!-- Starts component -->
      <div id="app" class="max-w-sm mx-auto">
        <!-- Product List -->
        <ul id="product-list">
          <li class="flex flex-col gap-4" data-id="1">
            <div>
              <span>Tomatoes</span> - <span>$10</span>
            </div>
            <button
              class="h-12 px-8 py-2 text-sm font-semibold text-orange-600 rounded-full add-to-cart bg-orange-50 hover:bg-orange-100 focus:outline-none focus:ring-2 focus:ring-orange-500 focus:ring-offset-2"
            >
              Add to Cart
            </button>
          </li>
          <!-- Add more products here -->
        </ul>
        <!-- Cart -->
        <div
          class="w-full max-w-sm pt-6 mx-auto mt-6 text-gray-500 border-t prose prose-sm prose-headings:font-normal border-neutral-200 prose-headings:text-xl"
        >
          <h4>Your items</h4>
          <ul id="cart-list">
            <!-- Cart items will be hardcoded here -->
          </ul>
          <div>Total Price: $<span id="total-price">0</span></div>
        </div>
      </div>
      <!-- Ends component -->
    </Wrapper>
  </section>
</BaseLayout>
<script type="module">
  document.addEventListener("DOMContentLoaded", function () {
    const products = [
      { id: 1, name: "Tomatoes", price: 10 },
      // Add more products here
    ];
    const cart = [];
    function renderCart() {
      const cartList = document.getElementById("cart-list");
      cartList.innerHTML = "";
      cart.forEach((item, index) => {
        const li = document.createElement("li");
        li.innerHTML = `
            <span>${item.name} x${item.quantity}</span> - $<span>${item.price * item.quantity}</span>
            <button class="px-3 py-1 text-sm font-semibold text-gray-800 bg-gray-100 increase-quantity rounded-md hover:bg-gray-300 focus:outline-none focus:ring-2 focus:ring-gray-500 focus:ring-offset-2">+</button>
            <button class="px-3 py-1 text-sm font-semibold text-gray-800 bg-gray-100 decrease-quantity rounded-md hover:bg-gray-300 focus:outline-none focus:ring-2 focus:ring-gray-500 focus:ring-offset-2">-</button>
            <button class="px-3 py-1 text-sm font-semibold text-gray-800 bg-gray-200 remove-from-cart rounded-md hover:bg-gray-300 focus:outline-none focus:ring-2 focus:ring-gray-500 focus:ring-offset-2">Remove</button>
          `;
        li.querySelector(".increase-quantity").addEventListener("click", () =>
          increaseQuantity(index)
        );
        li.querySelector(".decrease-quantity").addEventListener("click", () =>
          decreaseQuantity(index)
        );
        li.querySelector(".remove-from-cart").addEventListener("click", () =>
          removeFromCart(index)
        );
        cartList.appendChild(li);
      });
      document.getElementById("total-price").textContent = totalPrice();
    }
    function addToCart(product) {
      const existingItem = cart.find((item) => item.id === product.id);
      if (existingItem) {
        existingItem.quantity++;
      } else {
        cart.push({ ...product, quantity: 1 });
      }
      renderCart();
    }
    function removeFromCart(index) {
      cart.splice(index, 1);
      renderCart();
    }
    function increaseQuantity(index) {
      cart[index].quantity++;
      renderCart();
    }
    function decreaseQuantity(index) {
      if (cart[index].quantity > 1) {
        cart[index].quantity--;
      } else {
        removeFromCart(index);
      }
      renderCart();
    }
    function totalPrice() {
      return cart.reduce(
        (total, item) => total + item.price * item.quantity,
        0
      );
    }
    document.querySelectorAll(".add-to-cart").forEach((button) => {
      button.addEventListener("click", (event) => {
        const productId = parseInt(event.target.closest("li").dataset.id);
        const product = products.find((p) => p.id === productId);
        addToCart(product);
      });
    });
    renderCart();
  });
</script>

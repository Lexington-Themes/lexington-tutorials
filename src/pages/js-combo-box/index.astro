<section class="overflow-hidden">
  <div class="w-full flex flex-col py-32 p-8">
    <div
      class="prose text-gray-500 prose-sm text-center prose-headings:font-normal prose-headings:text-xl w-full max-w-lg mx-auto">
      <div>
        <h1>Command box</h1>
        <p class="text-balance">Click on the input to see what happends</p>
      </div>
    </div>
    <!-- Starts component -->
    <div
      class="max-w-xl mx-auto w-full bg-gray-50 p-2 border rounded-xl border-gray-100">
      <div
        id="combo-box"
        class="relative">
        <label
          for="combo-input"
          class="sr-only"
          >Search or use commands</label
        >
        <svg
          xmlns="http://www.w3.org/2000/svg"
          viewBox="0 0 24 24"
          fill="none"
          stroke="currentColor"
          stroke-width="2"
          stroke-linecap="round"
          stroke-linejoin="round"
          class="absolute top-3.5 left-4 h-5 w-5 text-gray-400"
          aria-hidden="true">
          <path d="M10 10m-7 0a7 7 0 1 0 14 0a7 7 0 1 0 -14 0"></path>
          <path d="M21 21l-6 -6"></path>
        </svg>
        <input
          type="text"
          id="combo-input"
          class="w-full h-12 pl-11 pr-4 block px-4 py-3 placeholder-gray-500 bg-white border-0 rounded-lg appearance-none text-blue-500 focus:border-blue-500 focus:bg-white focus:outline-none focus:ring-blue-500 focus:ring-inset focus:ring-2 text-xs"
          placeholder="Search for anything"
          role="combobox"
          aria-expanded="false"
          aria-controls="combo-menu"
          aria-activedescendant=""
          aria-autocomplete="list"
        />
      </div>
      <ul
        id="combo-menu"
        class="hidden mt-2 overflow-hidden bg-white rounded-lg shadow-xl border border-gray-200"
        role="listbox"
        aria-label="Command options">
        <li
          id="option-1"
          class="flex items-center p-3 gap-4 text-sm text-gray-600 cursor-pointer hover:bg-gray-50 hover:text-blue-500"
          role="option"
          aria-selected="false">
          <svg
            xmlns="http://www.w3.org/2000/svg"
            class="size-4"
            viewBox="0 0 24 24"
            fill="none"
            stroke="currentColor"
            stroke-width="2"
            stroke-linecap="round"
            stroke-linejoin="round"
            aria-hidden="true">
            <path d="M3 12l3 3l3 -3l-3 -3z"></path>
            <path d="M15 12l3 3l3 -3l-3 -3z"></path>
            <path d="M9 6l3 3l3 -3l-3 -3z"></path>
            <path d="M9 18l3 3l3 -3l-3 -3z"></path>
          </svg>
          Search projects
        </li>
        <li
          id="option-2"
          class="flex items-center p-3 gap-4 text-sm text-gray-600 cursor-pointer hover:bg-gray-50 hover:text-blue-500"
          role="option"
          aria-selected="false">
          <svg
            xmlns="http://www.w3.org/2000/svg"
            class="size-4"
            viewBox="0 0 24 24"
            fill="none"
            stroke="currentColor"
            stroke-width="2"
            stroke-linecap="round"
            stroke-linejoin="round"
            aria-hidden="true">
            <path d="M12 5l0 14"></path>
            <path d="M5 12l14 0"></path>
          </svg>
          Create a new project
        </li>
        <li
          id="option-3"
          class="flex items-center p-3 gap-4 text-sm text-gray-600 cursor-pointer hover:bg-gray-50 hover:text-blue-500"
          role="option"
          aria-selected="false">
          <svg
            xmlns="http://www.w3.org/2000/svg"
            class="size-4"
            viewBox="0 0 24 24"
            fill="none"
            stroke="currentColor"
            stroke-width="2"
            stroke-linecap="round"
            stroke-linejoin="round"
            aria-hidden="true">
            <path d="M10 13a2 2 0 1 0 4 0a2 2 0 0 0 -4 0"></path>
            <path d="M8 21v-1a2 2 0 0 1 2 -2h4a2 2 0 0 1 2 2v1"></path>
            <path d="M15 5a2 2 0 1 0 4 0a2 2 0 0 0 -4 0"></path>
            <path d="M17 10h2a2 2 0 0 1 2 2v1"></path>
            <path d="M5 5a2 2 0 1 0 4 0a2 2 0 0 0 -4 0"></path>
            <path d="M3 13v-1a2 2 0 0 1 2 -2h2"></path>
          </svg>
          Search team
        </li>
      </ul>
    </div>
    <!-- Ends component -->
    <!-- Starts links to tutorial -->
    <div
      class="pointer-events-none fixed inset-x-0 bottom-0 sm:flex sm:justify-center p-2">
      <div
        class="pointer-events-auto flex w-full max-w-md divide-x divide-neutral-200 rounded-lg bg-white shadow-xl border border-neutral-200">
        <div class="flex w-0 flex-1 items-center p-4">
          <div class="w-full">
            <p class="text-sm font-medium text-neutral-900">Tutorial</p>
            <p class="mt-1 text-sm text-neutral-500">
              How to create a basic command box with Tailwind CSS and JavaScript
            </p>
            <p class="mt-2 text-xs text-orange-500 underline">
              <a href="https://lexingtonthemes.com"> by Â© Lexington Themes</a>
            </p>
          </div>
        </div>
        <div class="flex">
          <div class="flex flex-col divide-y divide-neutral-200">
            <div class="flex h-0 flex-1">
              <a
                href="https://lexingtonthemes.com/tutorials/how-to-create-an-interactive-combo-box-with-tailwind-css-and-javascript/"
                type="button"
                class="flex w-full items-center justify-center rounded-none rounded-tr-lg px-4 py-3 text-sm font-medium text-orange-600 hover:text-orange-500 focus:z-10 focus:outline-none focus:ring-2 focus:ring-orange-500"
                >Tutorial</a
              >
            </div>
            <div class="flex h-0 flex-1">
              <a
                href="https://github.com/Lexington-Themes/lexington-tutorials/blob/main/src/pages/js-combo-box/index.astro"
                class="flex w-full items-center justify-center rounded-none rounded-br-lg  px-4 py-3 text-sm font-medium text-neutral-700 hover:text-neutral-500 focus:outline-none focus:ring-2 focus:ring-orange-500"
                >Get the code</a
              >
            </div>
          </div>
        </div>
      </div>
    </div>
    <!-- Ends links to tutorial -->
  </div>
</section>

<script type="module">
  const input = document.getElementById("combo-input");
  const menu = document.getElementById("combo-menu");
  const options = menu.querySelectorAll('[role="option"]');
  let currentFocus = -1;

  input.addEventListener("focus", () => {
    menu.classList.remove("hidden");
    input.setAttribute("aria-expanded", "true");
  });

  input.addEventListener("blur", () => {
    setTimeout(() => {
      menu.classList.add("hidden");
      input.setAttribute("aria-expanded", "false");
    }, 100);
  });

  input.addEventListener("keydown", (e) => {
    if (e.key === "ArrowDown" || e.key === "ArrowUp") {
      e.preventDefault();
      const direction = e.key === "ArrowDown" ? 1 : -1;
      currentFocus =
        (currentFocus + direction + options.length) % options.length;
      updateFocus();
    } else if (e.key === "Enter" && currentFocus !== -1) {
      e.preventDefault();
      options[currentFocus].click();
    } else if (e.key === "Escape") {
      menu.classList.add("hidden");
      input.setAttribute("aria-expanded", "false");
      input.blur();
    }
  });

  function updateFocus() {
    options.forEach((option, index) => {
      if (index === currentFocus) {
        option.classList.add("bg-blue-50");
        option.setAttribute("aria-selected", "true");
        input.setAttribute("aria-activedescendant", option.id);
      } else {
        option.classList.remove("bg-blue-50");
        option.setAttribute("aria-selected", "false");
      }
    });
  }

  options.forEach((option) => {
    option.addEventListener("click", () => {
      input.value = option.textContent.trim();
      menu.classList.add("hidden");
      input.setAttribute("aria-expanded", "false");
      input.focus();
    });

    option.addEventListener("mouseenter", () => {
      currentFocus = Array.from(options).indexOf(option);
      updateFocus();
    });
  });
</script>

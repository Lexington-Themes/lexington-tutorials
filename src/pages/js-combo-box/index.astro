---
// Fundations
import BaseLayout from "@/layouts/BaseLayout.astro";
import Wrapper from "@/components/fundations/containers/Wrapper.astro";
import TutorialBanner from "@/components/global/TutorialBanner.astro";
---

---
<BaseLayout>
  <section class="overflow-hidden">
    <!-- Starts links to tutorial -->
    <TutorialBanner
      tutorialUrl="https://lexingtonthemes.com/tutorials/how-to-create-an-interactive-combo-box-with-tailwind-css-and-javascript/"
      codeUrl="https://github.com/Lexington-Themes/lexington-tutorials/blob/main/src/pages/js-combo-box/index.astro"
    />
    <!--  Starts component -->
    <Wrapper class="py-24 lg:py-62">
      <!-- Starts component -->
      <div
        class="w-full max-w-xl p-2 mx-auto border bg-base-50 rounded-xl border-base-100"
      >
        <div id="combo-box" class="relative">
          <label for="combo-input" class="sr-only">Search or use commands</label
          >
          <svg
            xmlns="http://www.w3.org/2000/svg"
            viewBox="0 0 24 24"
            fill="none"
            stroke="currentColor"
            stroke-width="2"
            stroke-linecap="round"
            stroke-linejoin="round"
            class="absolute top-3.5 left-4 h-5 w-5 text-base-400"
            aria-hidden="true"
          >
            <path d="M10 10m-7 0a7 7 0 1 0 14 0a7 7 0 1 0 -14 0"></path>
            <path d="M21 21l-6 -6"></path>
          </svg>
          <input
            type="text"
            id="combo-input"
            class="block w-full h-12 px-4 py-3 pr-4 text-xs bg-white border-0 rounded-lg appearance-none pl-11 placeholder-base-500 text-accent-500 focus:border-accent-500 focus:bg-white focus:outline-none focus:ring-accent-500 focus:ring-inset focus:ring-2"
            placeholder="Search for anything"
            role="combobox"
            aria-expanded="false"
            aria-controls="combo-menu"
            aria-activedescendant=""
            aria-autocomplete="list"
          />
        </div>
        <ul
          id="combo-menu"
          class="hidden mt-2 overflow-hidden bg-white border rounded-lg shadow-xl border-base-200"
          role="listbox"
          aria-label="Command options"
        >
          <li
            id="option-1"
            class="flex items-center p-3 text-sm cursor-pointer gap-4 text-base-600 hover:bg-base-50 hover:text-accent-500"
            role="option"
            aria-selected="false"
          >
            <svg
              xmlns="http://www.w3.org/2000/svg"
              class="size-4"
              viewBox="0 0 24 24"
              fill="none"
              stroke="currentColor"
              stroke-width="2"
              stroke-linecap="round"
              stroke-linejoin="round"
              aria-hidden="true"
            >
              <path d="M3 12l3 3l3 -3l-3 -3z"></path>
              <path d="M15 12l3 3l3 -3l-3 -3z"></path>
              <path d="M9 6l3 3l3 -3l-3 -3z"></path>
              <path d="M9 18l3 3l3 -3l-3 -3z"></path>
            </svg>
            Search projects
          </li>
          <li
            id="option-2"
            class="flex items-center p-3 text-sm cursor-pointer gap-4 text-base-600 hover:bg-base-50 hover:text-accent-500"
            role="option"
            aria-selected="false"
          >
            <svg
              xmlns="http://www.w3.org/2000/svg"
              class="size-4"
              viewBox="0 0 24 24"
              fill="none"
              stroke="currentColor"
              stroke-width="2"
              stroke-linecap="round"
              stroke-linejoin="round"
              aria-hidden="true"
            >
              <path d="M12 5l0 14"></path>
              <path d="M5 12l14 0"></path>
            </svg>
            Create a new project
          </li>
          <li
            id="option-3"
            class="flex items-center p-3 text-sm cursor-pointer gap-4 text-base-600 hover:bg-base-50 hover:text-accent-500"
            role="option"
            aria-selected="false"
          >
            <svg
              xmlns="http://www.w3.org/2000/svg"
              class="size-4"
              viewBox="0 0 24 24"
              fill="none"
              stroke="currentColor"
              stroke-width="2"
              stroke-linecap="round"
              stroke-linejoin="round"
              aria-hidden="true"
            >
              <path d="M10 13a2 2 0 1 0 4 0a2 2 0 0 0 -4 0"></path>
              <path d="M8 21v-1a2 2 0 0 1 2 -2h4a2 2 0 0 1 2 2v1"></path>
              <path d="M15 5a2 2 0 1 0 4 0a2 2 0 0 0 -4 0"></path>
              <path d="M17 10h2a2 2 0 0 1 2 2v1"></path>
              <path d="M5 5a2 2 0 1 0 4 0a2 2 0 0 0 -4 0"></path>
              <path d="M3 13v-1a2 2 0 0 1 2 -2h2"></path>
            </svg>
            Search team
          </li>
        </ul>
      </div>
    </Wrapper>
  </section>

  <script type="module">
    const input = document.getElementById("combo-input");
    const menu = document.getElementById("combo-menu");
    const options = menu.querySelectorAll('[role="option"]');
    let currentFocus = -1;

    input.addEventListener("focus", () => {
      menu.classList.remove("hidden");
      input.setAttribute("aria-expanded", "true");
    });

    input.addEventListener("blur", () => {
      setTimeout(() => {
        menu.classList.add("hidden");
        input.setAttribute("aria-expanded", "false");
      }, 100);
    });

    input.addEventListener("keydown", (e) => {
      if (e.key === "ArrowDown" || e.key === "ArrowUp") {
        e.preventDefault();
        const direction = e.key === "ArrowDown" ? 1 : -1;
        currentFocus =
          (currentFocus + direction + options.length) % options.length;
        updateFocus();
      } else if (e.key === "Enter" && currentFocus !== -1) {
        e.preventDefault();
        options[currentFocus].click();
      } else if (e.key === "Escape") {
        menu.classList.add("hidden");
        input.setAttribute("aria-expanded", "false");
        input.blur();
      }
    });

    function updateFocus() {
      options.forEach((option, index) => {
        if (index === currentFocus) {
          option.classList.add("bg-accent-50");
          option.setAttribute("aria-selected", "true");
          input.setAttribute("aria-activedescendant", option.id);
        } else {
          option.classList.remove("bg-accent-50");
          option.setAttribute("aria-selected", "false");
        }
      });
    }

    options.forEach((option) => {
      option.addEventListener("click", () => {
        input.value = option.textContent.trim();
        menu.classList.add("hidden");
        input.setAttribute("aria-expanded", "false");
        input.focus();
      });

      option.addEventListener("mouseenter", () => {
        currentFocus = Array.from(options).indexOf(option);
        updateFocus();
      });
    });
  </script>
</BaseLayout>

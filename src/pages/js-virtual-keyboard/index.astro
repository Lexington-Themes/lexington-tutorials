---
// Fundations
import BaseLayout from "@/layouts/BaseLayout.astro";
import Wrapper from "@/components/fundations/containers/Wrapper.astro";
import TutorialBanner from "@/components/global/TutorialBanner.astro";
---

<BaseLayout>
  <section>
    <!-- Starts links to tutorial -->
    <TutorialBanner
      tutorialUrl="https://lexingtonthemes.com/tutorials/how-to-create-a-virtual-keyboard-with-tailwind-css-and-javascript/"
      codeUrl="https://github.com/Lexington-Themes/lexington-tutorials/blob/main/src/pages/js-virtual-keyboard/index.astro"
    />
    <Wrapper class="py-24">
      <!-- Virtual Keyboard Container -->
      <div
        id="virtual-keyboard"
        class="hidden max-w-4xl p-4 mx-auto mt-12 border rounded-lg bg-base-50 border-base-200 md:block"
      >
        <!-- Keyboard Output Display -->
        <div
          id="keyboard-output"
          class="h-12 p-2 mb-4 text-xl bg-white border rounded-md border-base-200"
        >
        </div>

        <!-- Keyboard Layout -->
        <div class="grid gap-1">
          <!-- Number Row -->
          <div class="grid grid-cols-13 gap-1">
            <button class="p-2 text-sm rounded key bg-base-300">Esc</button>
            <button class="p-2 bg-white rounded key">1</button>
            <button class="p-2 bg-white rounded key">2</button>
            <button class="p-2 bg-white rounded key">3</button>
            <button class="p-2 bg-white rounded key">4</button>
            <button class="p-2 bg-white rounded key">5</button>
            <button class="p-2 bg-white rounded key">6</button>
            <button class="p-2 bg-white rounded key">7</button>
            <button class="p-2 bg-white rounded key">8</button>
            <button class="p-2 bg-white rounded key">9</button>
            <button class="p-2 bg-white rounded key">0</button>
            <button class="p-2 rounded key bg-base-300 col-span-2"
              >Backspace</button
            >
          </div>
          <!-- QWERTY Row -->
          <div class="grid grid-cols-13 gap-1">
            <button class="p-2 text-sm rounded key bg-base-300 col-span-2"
              >Tab</button
            >
            <button class="p-2 bg-white rounded key">Q</button>
            <button class="p-2 bg-white rounded key">W</button>
            <button class="p-2 bg-white rounded key">E</button>
            <button class="p-2 bg-white rounded key">R</button>
            <button class="p-2 bg-white rounded key">T</button>
            <button class="p-2 bg-white rounded key">Y</button>
            <button class="p-2 bg-white rounded key">U</button>
            <button class="p-2 bg-white rounded key">I</button>
            <button class="p-2 bg-white rounded key">O</button>
            <button class="p-2 bg-white rounded key">P</button>
            <button class="p-2 bg-white rounded key">Ã…</button>
          </div>
          <!-- ASDF Row -->
          <div class="grid grid-cols-13 gap-1">
            <button class="p-2 text-sm rounded key bg-base-300 col-span-2"
              >Caps</button
            >
            <button class="p-2 bg-white rounded key">A</button>
            <button class="p-2 bg-white rounded key">S</button>
            <button class="p-2 bg-white rounded key">D</button>
            <button class="p-2 bg-white rounded key">F</button>
            <button class="p-2 bg-white rounded key">G</button>
            <button class="p-2 bg-white rounded key">H</button>
            <button class="p-2 bg-white rounded key">J</button>
            <button class="p-2 bg-white rounded key">K</button>
            <button class="p-2 bg-white rounded key">L</button>
            <button class="p-2 rounded key bg-base-300 col-span-2">Enter</button
            >
          </div>
          <!-- ZXCV Row -->
          <div class="grid grid-cols-13 gap-1">
            <button class="p-2 text-sm rounded key bg-base-300 col-span-2"
              >Shift</button
            >
            <button class="p-2 bg-white rounded key">Z</button>
            <button class="p-2 bg-white rounded key">X</button>
            <button class="p-2 bg-white rounded key">C</button>
            <button class="p-2 bg-white rounded key">V</button>
            <button class="p-2 bg-white rounded key">B</button>
            <button class="p-2 bg-white rounded key">N</button>
            <button class="p-2 bg-white rounded key">M</button>
            <button class="p-2 bg-white rounded key">,</button>
            <button class="p-2 bg-white rounded key">.</button>
            <button class="p-2 text-sm rounded key bg-base-300 col-span-2"
              >Shift</button
            >
          </div>
          <!-- Space Row -->
          <div class="grid grid-cols-13 gap-1">
            <button class="p-2 text-sm rounded key bg-base-300 col-span-2"
              >Ctrl</button
            >
            <button class="p-2 text-sm rounded key bg-base-300 col-span-2"
              >Alt</button
            >
            <button class="p-2 bg-white rounded key col-span-7">Space</button>
            <button class="p-2 text-sm rounded key bg-base-300 col-span-2"
              >Alt</button
            >
          </div>
        </div>
      </div>

      <!-- Ends component -->
    </Wrapper>
  </section>
</BaseLayout>
<script type="module">
  // Get the keyboard container and output display
  const keyboard = document.getElementById("virtual-keyboard");
  const output = document.getElementById("keyboard-output");

  // Add click event listener to the keyboard container
  keyboard.addEventListener("click", function (e) {
    // Check if the clicked element is a key
    if (e.target.classList.contains("key")) {
      const key = e.target.textContent;

      // Handle different key actions
      switch (key) {
        case "Backspace":
          output.textContent = output.textContent.slice(0, -1);
          break;
        case "Enter":
          output.textContent += "\n";
          break;
        case "Space":
          output.textContent += " ";
          break;
        case "Tab":
        case "Caps":
        case "Shift":
        case "Ctrl":
        case "Alt":
        case "Esc":
          // These keys don't produce output
          break;
        default:
          output.textContent += key;
      }
    }
  });
</script>

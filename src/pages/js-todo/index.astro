---
// Fundations
import BaseLayout from "@/layouts/BaseLayout.astro";
import Wrapper from "@/components/fundations/containers/Wrapper.astro";
import TutorialBanner from "@/components/global/TutorialBanner.astro";
---

<BaseLayout>
  <section>
    <!-- Starts links to tutorial -->
    <TutorialBanner
      tutorialUrl="https://lexingtonthemes.com/tutorials/how-to-create-a-todo-with-javascript-and-tailwind-css/"
      codeUrl="https://github.com/Lexington-Themes/lexington-tutorials/blob/main/src/pages/js-todo/index.astro"
    />
    <!--  Starts component -->
    <Wrapper class="py-24 lg:py-62">
      <div id="todo-component" class="max-w-md mx-auto">
        <!-- Input to add new todo -->
        <div class="flex flex-col items-center gap-2">
          <button
            id="addTodoButton"
            class="w-full h-10 px-8 py-2 text-sm font-semibold text-white rounded-full bg-accent-600 hover:bg-accent-500 focus:outline-none focus:ring-2 focus:ring-accent-500 focus:ring-offset-2"
            >Add</button
          >
          <input
            id="newTodoInput"
            type="text"
            class="w-full text-sm border-base-300 rounded-md placeholder-base-400 focus:border-accent-500 focus:ring-accent-500"
            placeholder="Make the logo bigger"
          />
        </div>
        <!-- List of todos -->
        <ul id="todoList" class="mt-4 divide-y"></ul>
      </div>
    </Wrapper>
  </section>
</BaseLayout>
<script type="module">
  document.addEventListener("DOMContentLoaded", () => {
    const todos = JSON.parse(localStorage.getItem("todos")) || [];
    const todoList = document.getElementById("todoList");
    const newTodoInput = document.getElementById("newTodoInput");
    const addTodoButton = document.getElementById("addTodoButton");

    const renderTodos = () => {
      todoList.innerHTML = todos
        .map(
          (todo, i) => `
        <li class="flex items-center w-full py-2 space-x-2">
          <div class="flex items-center justify-between w-full">
            <div>
              <input type="checkbox" ${todo.completed ? "checked" : ""} class="w-4 h-4 rounded form-checkbox border-base-300 text-accent-600 focus:ring-accent-600"/>
              <span class="text-lg text-base-500 ${todo.completed ? "line-through" : ""}">${todo.text}</span>
            </div>
            <button class="ml-auto text-black hover:text-red-700 focus:outline-none">
              <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" class="w-5 h-5">
                <path d="M6.28 5.22a.75.75 0 0 0-1.06 1.06L8.94 10l-3.72 3.72a.75.75 0 1 0 1.06 1.06L10 11.06l3.72 3.72a.75.75 0 1 0 1.06-1.06L11.06 10l3.72-3.72a.75.75 0 0 0-1.06-1.06L10 8.94 6.28 5.22Z"></path>
              </svg>
            </button>
          </div>
        </li>
      `
        )
        .join("");

      document
        .querySelectorAll('input[type="checkbox"]')
        .forEach((checkbox, i) => {
          checkbox.addEventListener("change", () => {
            todos[i].completed = checkbox.checked;
            localStorage.setItem("todos", JSON.stringify(todos));
            renderTodos();
          });
        });

      document.querySelectorAll("button.text-black").forEach((button, i) => {
        button.addEventListener("click", () => {
          todos.splice(i, 1);
          localStorage.setItem("todos", JSON.stringify(todos));
          renderTodos();
        });
      });
    };

    const addTodo = () => {
      const newTodoText = newTodoInput.value.trim();
      if (newTodoText) {
        todos.push({ text: newTodoText, completed: false });
        newTodoInput.value = "";
        localStorage.setItem("todos", JSON.stringify(todos));
        renderTodos();
      }
    };

    addTodoButton.addEventListener("click", addTodo);
    newTodoInput.addEventListener(
      "keydown",
      (e) => e.key === "Enter" && addTodo()
    );

    renderTodos();
  });
</script>

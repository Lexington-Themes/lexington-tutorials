---
interface Props {
  variant?: "standard" | "prose"; // Define any variants you need
  class?: string; // Optional prop for additional classes
  id?: string; // Optional prop for additional classes
}
const { variant = "standard", class: extraClass = "" } = Astro.props;
// Map each variant to its specific classes
const variantClasses = {
  // Standard wrapper
  standard:
    "mx-auto  2xl:max-w-6xl 2xl:px-12 w-full  max-w-5xl border-x border-base-200 border-dashed px-4",

  // Prose styles
  prose:
    "prose text-base-500 prose-blockquote:border-l-accent prose-a:border-base-500 prose-a:border-b prose-a:no-underline prose-a  prose-a:transition-colors prose-a:duration-200 prose-a:hover:border-solid   prose-a:hover:text-accent-500 prose-headings:font-medium prose-headings:text-base-800 prose-pre:border prose-li:marker:text-accent-600  max-w-none  prose-pre:rounded-xl w-full prose-blockquote:text-base-500  prose-pre:border-base-300 prose-ul:[list-style-type:'â€”'] prose-pre:scrollbar-hide",
};
// Combine the classes for the specified variant with any extra classes
const classes = `${variantClasses[variant]} ${extraClass}`.trim();
---

<div class={classes}>
  <slot />
</div>
